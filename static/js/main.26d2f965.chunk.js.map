{"version":3,"sources":["components/ui/BurgerButton/BurgerButton.jsx","components/Nav/Nav.jsx","pages/Components/Tabs/Tabs.module.scss","containers/Layout.jsx","serviceWorker.js","containers/Content.jsx","components/Header/Header.jsx","components/ui/Tabs/Tabs.jsx","components/ui/Tabs/TabContent/TabContent.jsx","components/ui/Tabs/TabLink/TabLink.jsx","components/ui/Tabs/TabSlider/TabSlider.jsx","pages/Main/Main.jsx","components/CopyText/CopyText.jsx","pages/Markup/Grid/Grid.jsx","pages/Markup/Colors/Colors.jsx","pages/Markup/Typography/Typography.jsx","pages/Markup/Icons/Icons.jsx","pages/Markup/MarkupView.jsx","pages/Components/Button/Button.jsx","pages/Components/Input/Input.jsx","pages/Components/Checkbox/Checkbox.jsx","pages/Components/Radio/Radio.jsx","pages/Components/Tooltip/Tooltip.jsx","pages/Components/Dropdown/Dropdown.jsx","pages/Components/Modal/Modal.jsx","pages/Components/Form/Form.jsx","pages/Components/Toggle/Toggle.jsx","pages/Components/Select/Select.jsx","pages/Components/Progress/Progress.jsx","pages/Components/Spinner/Spinner.jsx","pages/Components/Accordion/Accordion.jsx","pages/Components/Tabs/Tabs.jsx","pages/Components/ComponentView.jsx","pages/Methods/NumberFormat/NumberFormat.jsx","pages/Methods/MethodView.jsx","pages/Plugins/Swiper/index.jsx","pages/Plugins/Simplebar/index.jsx","pages/Plugins/Nouislider/Nouislider.jsx","pages/Plugins/Photoswipe/Photoswipe.jsx","pages/Plugins/PluginsView.jsx","pages/Utils/Element/index.jsx","pages/Utils/Event/index.jsx","pages/Utils/Form/index.jsx","pages/Utils/EventEmitter/index.jsx","pages/Utils/Mask/index.jsx","pages/Utils/Object/index.jsx","pages/Utils/Prototype/index.jsx","pages/Utils/UtilsView.jsx","App.jsx","index.js","components/ui/Accordion/Accordion.jsx"],"names":["burgerButtonHanlder","e","click","button","target","closest","hasAttribute","removeAttribute","setAttribute","BurgerButton","props","active","burger-button","onClick","burger-line","Nav","burgerButtonHandler","state","setState","cls","activeClassName","matchPath","window","location","pathname","path","exact","this","push","className","join","style","maxHeight","autoHide","to","Accordion","title","classNameTitle","href","Component","module","exports","LayoutContext","React","createContext","displayName","Layout","codes","forEach","code","eval","stateJs","ref","stateHtml","stateKey","stateValue","htmlStateKey","htmlStateValue","key","clearTimeout","evalTimeout","write","setTimeout","current","innerHTML","console","log","error","jsStateKey","jsStateValue","Provider","value","evalEditorJS","initEval","evalEditorHtml","children","Boolean","hostname","match","Content","am-container","withRouter","headerName","headerText","findDefaultTab","firstLink","findTab","child","tag","Children","Tabs","handleSelect","tabName","selectedTab","handleSlider","opt","first","timeoutSlider","sliderRef","transitionDuration","widthSlider","width","transformWidthSlider","link","left","tabs","getBoundingClientRect","createRef","map","cloneElement","nameTab","for","transformChildren","TabContent","TabLink","onClickHandler","offsetWidth","TabSlider","transform","Main","npm","webpack","component","scss","am-content","onValueChange","readOnly","highlight","languages","javascript","padding","CopyText","renderCopy","language","copyText","html","text","hidden","am-icon","innerContent","listener","clipboardData","setData","preventDefault","document","addEventListener","execCommand","removeEventListener","copyHandler","querySelector","Grid","grid_x4","gridSize","gridAlign","container","scssVariables","display","alignItems","marginTop","marginRight","markup","am-table-responsive","am-table","border-bottom","Colors","Typography","Icons","iconCopyHandler","close","iconCopyRender","iconCopyText","iconPreview","am-grid","spacing","MarkupView","renderView","name","params","views","view","grid","colors","typography","icons","history","Button","codeButton_main","codeButton_hover","codeButton_disabled","codeButton_default","Input","input","input_label","input_validate","input_search","textarea","Checkbox","checkbox","checkbox_group","checkbox_disabled","Radio","radio","radio_group","radio_disabled","Tooltip","tooltip","tooltip_direction","tooltip_align","TooltipUI","bubbleInit","Dropdown","dropdown","dropdown_direction","dropdown_align","DropdownUI","Modal","modal_bubble","modal_bubble_adaptive","modal_controller","modal_controller_mobile","ModalUI","ModalUIMobile","modalBuild","modalBuildMobile","Utils","element","create","btn","modal","wrapper","options","adaptive","mobile","modalName","modalTag","modalCloseTag","modalContentTag","destroy","back","modalClose","render","am-button","am-modal-target","am-modal-overlay","am-modal","am-modal-close","am-modal-content","am-modal-title","am-input","type","renderModal","bind","renderModalMobile","Form","form_field","SelectUI","placeholder","placeholderOption","Toggle","toggle","toggle_disabled","Select","select_default","select","select_custom","selectValue","selectBuild","selectNative","utils","createTemplate","appendChild","label","on","data","newVal","Progress","ringBuild","ring","ProgressUI","percent","ringRadius","ringWidth","ring1","ringColor","appendRing","build","progressAdd","val","getPercent","setPercent","ProgressUI1","progressRemove","ringAdd","newVal1","ringRemove","progress","progressCreate","progressCreateRing","newProgress","appendProgress","progressTag","tag1","tag2","marginBottom","Spinner","spinner","spinner_inverted","spinner_center","spinner_button","loader","loader_center","position","justifyContent","background","height","accordion_default_js","accordion_default_markup","accordion_some_js","accordion_some_markup","accordion_multiple_js","accordion_multiple_markup","accordionDefaultMarkup","accordionSomeMarkup","accordionMultipleMarkup","accordionBuild","accordionDefault","AccordionUI","init","tab","panel","duration","multiple","tabs_default_markup","classes","content","tabs_swiper_markup","tabs_events_markup","TabsPage","tabs_default_js","tabs_swiper_js","tabs_events_js","tabsDefaultMarkup","tabsSwiperMarkup","tabsEventsMarkup","tabsBuild","TabsUI","Swiper","loop","slidesPerView","spaceBetween","tabs2","color","ComponentView","form","accordion","NumberFormat","numberformat","SwiperPage","context","cards","flexDirection","rel","tabsHtml","contextType","SimpleBarPage","SimpleBar","SimpleBarHtml","noUiSlider","nouislider_input","Nouislider","createSlider","oneRef","connect","behaviour","start","twoRef","nouislider_js","nouislider_html","nouisliderRef","inputRef","nouislider1_js","js","nouislider2_js","am-inputs-range","am-input-range","am-dots","am-slider","Photoswipe","pswp","jspswp","PluginsView","swiper","simplebar","nouislider","photoswipe","Element","template","coord","templateRef","coordRef","EventPage","transitionEnd","animationEnd","formRef","formValidate","fields","getFields","validateOptions","empty","email","phone","errors","handlerChange","validate","checkError","clear","getField","EventEmitterPage","event","emit","Mask","string","number","float","stringRef","numberRef","floatRef","phoneRef","mask","am-hint","ObjectPage","is","extend","Prototype","setAttributes","removeAttributes","UtilsView","EventEmitter","object","prototype","App","MethodView","app","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","collapsing","body","collpasing","scrollHeight","nav","classNameBody","classNameAccordion","navHandler"],"mappings":"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","file":"static/js/main.26d2f965.chunk.js","sourcesContent":["import React from 'react'\r\nimport './BurgerButton.scss'\r\n\r\nfunction burgerButtonHanlder(e, click) {\r\n    const button = e.target.closest('[burger-button]')\r\n\r\n    if (button.hasAttribute('active')) {\r\n        button.removeAttribute('active')\r\n        click(false)\r\n    } else {\r\n        button.setAttribute('active', '')\r\n        click(true)\r\n    }\r\n}\r\n\r\nconst BurgerButton = props => {\r\n    if (props.active) {\r\n        return (\r\n            <div burger-button={''} active={''} onClick={e => {burgerButtonHanlder(e, props.click)}}>\r\n                <div burger-line={''}></div>\r\n                <div burger-line={''}></div>\r\n                <div burger-line={''}></div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div burger-button={''} onClick={e => {burgerButtonHanlder(e, props.click)}}>\r\n                <div burger-line={''}></div>\r\n                <div burger-line={''}></div>\r\n                <div burger-line={''}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BurgerButton","import React, { Component } from 'react'\r\nimport './Nav.scss'\r\nimport {\r\n    NavLink,\r\n    matchPath\r\n} from 'react-router-dom'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\nimport Accordion from '../ui/Accordion/Accordion.jsx'\r\nimport BurgerButton from '../ui/BurgerButton/BurgerButton.jsx'\r\n\r\nclass Nav extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            active: true\r\n        }\r\n    }\r\n\r\n    burgerButtonHandler = (state) => {\r\n        this.setState({active: state})\r\n    }\r\n\r\n    render() {\r\n        const cls = ['nav']\r\n        const activeClassName = !!matchPath(window.location.pathname, { path: \"/pobeda-ui\", exact: true }) ? \"active\" : \"\"\r\n\r\n        if (this.state.active) {\r\n            cls.push('active')\r\n        }\r\n\r\n        return (\r\n            <nav className={cls.join(' ')}>\r\n                <BurgerButton active={this.state.active} click={this.burgerButtonHandler}/>\r\n                <SimpleBar style={{ maxHeight: '100%' }} autoHide={false}>\r\n                    <ul className={'nav__inner'}>\r\n                        <li className={'nav__item'}>\r\n                            <NavLink to={'/'} exact={true} className={'nav__link ' + activeClassName}>\r\n                                Начало\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={'nav__item'}>\r\n                                <Accordion title={'Разметка'} classNameTitle={'nav__link'}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <NavLink to={'/pobeda-ui/markup/grid'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                                Сетка\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        {/* <li>\r\n                                            <NavLink to={'/pobeda-ui/markup/colors'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                                Цвета\r\n                                            </NavLink>\r\n                                        </li> */}\r\n                                        {/* <li>\r\n                                            <NavLink to={'/pobeda-ui/markup/typography'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                                Типография\r\n                                            </NavLink>\r\n                                        </li> */}\r\n                                        {/* <li>\r\n                                            <NavLink to={'/pobeda-ui/markup/icons'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                                Иконки\r\n                                            </NavLink>\r\n                                        </li> */}\r\n                                    </ul>\r\n                                </Accordion>\r\n                        </li>\r\n                        <li className={'nav__item'}>\r\n                            <Accordion title={'Компоненты'} classNameTitle={'nav__link'}>\r\n                                <ul>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/button'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Кнопки\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    {/* <li>\r\n                                        <NavLink to={'/pobeda-ui/components/link'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Ссылки\r\n                                        </NavLink>\r\n                                    </li> */}\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/input'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Поля ввода\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/checkbox'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Чекбоксы\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/radio'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Радиокнопки\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/toggle'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Переключатель\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/select'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Селект\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/form'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Формы\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/modal'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Модальное окно\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/dropdown'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Выпадающий список\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/tooltip'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Всплывающий список\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/progress'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Индикатор\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/spinner'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Спиннер\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    {/* <li>\r\n                                        <NavLink to={'/pobeda-ui/components/tooltip'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Подсказки\r\n                                        </NavLink>\r\n                                    </li> */}\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/accordion'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Аккордеон\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/components/tabs'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Табы\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </Accordion>\r\n                        </li>\r\n\r\n                        {/* <li className={'nav__item'}>\r\n                            <Accordion title={'Методы'} classNameTitle={'nav__link'}>\r\n                                <ul>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/methods/numberformat'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            numberFormat\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/methods/declension'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            declension\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </Accordion>\r\n                        </li> */}\r\n\r\n                        <li className={'nav__item'}>\r\n                            <Accordion title={'Плагины'} classNameTitle={'nav__link'}>\r\n                                <ul>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/plugins/swiper'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            Swiper (карусель)\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/plugins/simplebar'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            SimpleBar (скроллбар)\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/plugins/photoswipe'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            PhotoSwipe (Фотогаллерея)\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/plugins/nouislider'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            noUiSldier (Ползунок)\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </Accordion>\r\n                        </li>\r\n                        <li className={'nav__item'}>\r\n                            <Accordion title={'Утилиты'} classNameTitle={'nav__link'}>\r\n                                <ul>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/utils/element'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            element\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/utils/event'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            event\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/utils/form'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            form\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/utils/EventEmitter'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            EventEmitter\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/utils/mask'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            mask\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/utils/object'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            object\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to={'/pobeda-ui/utils/prototype'} className={'nav__link'} activeClassName={'active'} onClick={() => this.burgerButtonHandler(true)}>\r\n                                            prototype\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </Accordion>\r\n                        </li>\r\n                        <li className={'nav__item'}>\r\n                            <a href=\"/pobeda-ui/uikit.html\" className={'nav__link'}>Uikit</a>\r\n                        </li>\r\n                    </ul>\r\n                </SimpleBar>\r\n                {/* <div className={'nav__logo'}>Победа</div> */}\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"Tabs_tabs__3xnCA\",\"tab\":\"Tabs_tab__3ff_F\",\"version-2\":\"Tabs_version-2__eqTRY\",\"content\":\"Tabs_content__1-ug-\"};","import React, { Component } from 'react'\r\nimport './Layout.scss'\r\n\r\nimport Nav from '../components/Nav/Nav.jsx'\r\n\r\nexport const LayoutContext = React.createContext();\r\n\r\nLayoutContext.displayName = 'LayoutContext';\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    /**\r\n     * Выполняет код\r\n     * @param {Array} codes массив строк, которые необходимо выполнить\r\n     */\r\n    initEval(codes = [])  {\r\n        // eslint-disable-next-line no-eval\r\n        codes.forEach(code => eval(code))\r\n    }\r\n\r\n    /**\r\n     * Обработчик изменения кода в поле ввода\r\n     * @param {Object} state {stateKey: stateValue}\r\n     * @param {RefObject} ref react ref\r\n     */\r\n    evalEditorJS(stateJs, ref, stateHtml) {\r\n        let stateKey;\r\n        let stateValue;\r\n\r\n        let htmlStateKey;\r\n        let htmlStateValue;\r\n\r\n        for (const key in stateJs) {\r\n            stateKey = key\r\n            stateValue = stateJs[key]\r\n        }\r\n\r\n        if (stateHtml) {\r\n            for (const key in stateHtml) {\r\n                htmlStateKey = key\r\n                htmlStateValue = stateHtml[key]\r\n            }\r\n        }\r\n\r\n        if (!stateKey && !stateValue && !ref) {\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            [stateKey]: stateValue\r\n        })\r\n\r\n        clearTimeout(this.state.evalTimeout)\r\n\r\n        if (this.state.write) {\r\n            this.setState({\r\n                evalTimeout: false\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            write: true,\r\n            evalTimeout: setTimeout(() => {\r\n                try {\r\n                    if (stateHtml) {\r\n                        ref.current.innerHTML = this.state[htmlStateKey];\r\n                    } else {\r\n                        ref.current.innerHTML = '';\r\n                    }\r\n\r\n                    console.log(this.state[htmlStateKey]);\r\n\r\n                    // eslint-disable-next-line no-eval\r\n                    eval(this.state[stateKey]);\r\n\r\n                    this.setState({\r\n                        write: false\r\n                    })\r\n                } catch (error) {\r\n                    ref.current.innerHTML = error;\r\n                }\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n    evalEditorHtml(stateHtml, ref, stateJs) {\r\n        try {\r\n            let jsStateKey;\r\n            let jsStateValue;\r\n\r\n            let htmlStateKey;\r\n            let htmlStateValue;\r\n\r\n            for (const key in stateHtml) {\r\n                htmlStateKey = key\r\n                htmlStateValue = stateHtml[key]\r\n            }\r\n\r\n            if (stateJs) {\r\n                for (const key in stateJs) {\r\n                    jsStateKey = key\r\n                    jsStateValue = stateJs[key]\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                [htmlStateKey]: htmlStateValue\r\n            });\r\n\r\n            ref.current.innerHTML = htmlStateValue;\r\n\r\n            if (jsStateValue) {\r\n                eval(jsStateValue)\r\n            };\r\n        } catch (error) {\r\n            ref.current.innerHTML = error;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const cls = ['layout']\r\n\r\n        return (\r\n            <LayoutContext.Provider value={{\r\n                evalEditorJS: this.evalEditorJS,\r\n                initEval: this.initEval,\r\n                evalEditorHtml: this.evalEditorHtml\r\n            }}>\r\n                <div className={cls.join(' ')}>\r\n                    <Nav/>\r\n                    <main className={'main'}>\r\n                        { this.props.children }\r\n                    </main>\r\n                </div>\r\n            </LayoutContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport Footer from '../components/Footer/Footer.jsx'\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        const cls = this.props.className ? this.props.className : ''\r\n\r\n        return (\r\n            <Fragment>\r\n                <content className={cls}>\r\n                    <div am-container=\"content\">\r\n                        { this.props.children }\r\n                    </div>\r\n                </content>\r\n                {/* <Footer/> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content","import React from 'react'\r\nimport './Header.scss'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n    return (\r\n        <header className={'header'}>\r\n            <div am-container=\"header\">\r\n                { props.headerName ? <h1 className={'header__name'}>{props.headerName}</h1> : null }\r\n                { props.headerText ? <p className={'header__text'}>{props.headerText }</p> : null }\r\n                { props.children }\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)","import React, { Component } from 'react'\r\nimport './Tabs.scss'\r\n\r\nconst findDefaultTab = (children, width = false) => {\r\n    let firstLink;\r\n        // firstDefaultLink;\r\n\r\n    const findTab = child => {\r\n        if (!child || !child.props /*!child || !child.props || firstDefaultLinklastLink*/) {\r\n            return;\r\n        }\r\n\r\n        if (child.props.tag === 'link') {\r\n            firstLink = firstLink || child.props.to;\r\n            //firstDefaultLink = firstDefaultLink || (child.props.default && child.props.to);\r\n        }\r\n\r\n        React.Children.forEach(child.props.children, findTab);\r\n    }\r\n\r\n    React.Children.forEach(children, findTab);\r\n\r\n    return /*firstDefaultLink || */firstLink;\r\n}\r\n\r\nclass Tabs extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            selectedTab: this.props.selectedTab || findDefaultTab(this.props.children),\r\n            widthSlider: findDefaultTab(this.props.children, true) || 0,\r\n            transformWidthSlider: 0,\r\n            timeoutSlider: false\r\n        }\r\n\r\n        this.tabs = React.createRef()\r\n        this.sliderRef = React.createRef()\r\n    }\r\n\r\n    transformChildren(children, { handleSelect, handleSlider }) {\r\n        if (typeof children !== 'object') {\r\n            return children\r\n        }\r\n\r\n        return React.Children.map(children, child => {\r\n            if (!child) {\r\n                return child\r\n            }\r\n            // if (child.props.className == 'tabs__link') {\r\n            //     console.log(child);\r\n            // }\r\n            //if (child.type.name === 'TabLink') {\r\n\r\n            if (child.props.tag === 'link') {\r\n                return React.cloneElement(child, {\r\n                    active: child.props.to === this.state.selectedTab,\r\n                    nameTab: child.props.to,\r\n                    handleSelect,\r\n                    handleSlider\r\n                })\r\n            }\r\n\r\n            if (child.props.tag === 'content') {\r\n                return React.cloneElement(child, {\r\n                    active: child.props.for === this.state.selectedTab,\r\n                })\r\n            }\r\n\r\n            if (child.props.tag === 'slider') {\r\n                return React.cloneElement(\r\n                    child,\r\n                    {\r\n                        handleSlider,\r\n                        widthSlider: this.state.widthSlider,\r\n                        transformWidthSlider: this.state.transformWidthSlider,\r\n                        sliderRef: this.sliderRef\r\n                    },\r\n                    this.transformChildren(child.props.children, { handleSelect, handleSlider }),\r\n                );\r\n            }\r\n\r\n            return React.cloneElement(\r\n                child,\r\n                {},\r\n                this.transformChildren(child.props.children, { handleSelect, handleSlider }),\r\n            );\r\n        });\r\n    }\r\n\r\n    handleSelect = tabName => {\r\n        this.setState({\r\n            selectedTab: tabName,\r\n        })\r\n    }\r\n\r\n    handleSlider = (opt, first = false) => {\r\n        // Устанавливаем длину ползунка по первой ссылке\\\r\n        if (first) {\r\n            this.setState({\r\n                timeoutSlider: setTimeout(() => {\r\n                    this.sliderRef.current.style.transitionDuration = '0s';\r\n                    this.setState({\r\n                        widthSlider: opt.width,\r\n                        transformWidthSlider: opt.link.left - this.tabs.current.getBoundingClientRect().left\r\n                    });\r\n                }, 300)\r\n            })\r\n        } else {\r\n            this.sliderRef.current.style.transitionDuration = '.3s';\r\n            this.setState({\r\n                widthSlider: opt.width,\r\n                transformWidthSlider: opt.link.left - this.tabs.current.getBoundingClientRect().left\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.state.timeoutSlider)\r\n    }\r\n\r\n    render() {\r\n        const handleSelect = this.handleSelect\r\n        const handleSlider  = this.handleSlider\r\n        const children = this.transformChildren(this.props.children, { handleSelect, handleSlider })\r\n\r\n        return (\r\n            <div className={this.props.className} ref={this.tabs}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tabs","import React, { Component} from 'react'\r\n\r\nclass TabContent extends Component {\r\n    render() {\r\n        const cls = this.props.className + (this.props.active ? ' active' : '')\r\n\r\n        return (\r\n            <div className={cls}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TabContent","import React, { Component } from 'react'\r\n\r\nclass TabLink extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.link = React.createRef()\r\n    }\r\n\r\n    onClickHandler = () => {\r\n        this.props.handleSelect(this.props.nameTab)\r\n        this.props.handleSlider({\r\n            width: this.link.current.offsetWidth,\r\n            link: this.link.current.getBoundingClientRect()\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.active) {\r\n            this.props.handleSlider({\r\n                width: this.link.current.offsetWidth,\r\n                link: this.link.current.getBoundingClientRect()\r\n            }, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            active\r\n        } = this.props\r\n\r\n        if (active) {\r\n            return (\r\n                <div onClick={this.onClickHandler} className={this.props.className + ' active'} ref={this.link}>\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div onClick={this.onClickHandler} className={this.props.className} ref={this.link}>\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default TabLink","import React, { Component } from 'react'\r\n\r\nclass TabSlider extends Component {\r\n    onClickHandler = () => {\r\n        //this.props.handleSelect(this.props.nameTab)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={'tabs__slider'} ref={this.props.sliderRef} style={{width: this.props.widthSlider + 'px', transform: `translateX(${this.props.transformWidthSlider + 'px'})`}}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TabSlider","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../containers/Content.jsx'\r\nimport Header from '../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../components/ui/Tabs/'\r\n\r\nconst npm = `\r\nnpm i pobeda-ui\r\n`;\r\n\r\nconst webpack = `\r\nresolve: {\r\n    alias: {\r\n        '@ui': path.resolve(__dirname, '/node_modules/pobeda-ui/src/ui/js'),\r\n        '@ui/scss': path.resolve(__dirname, '/node_modules/pobeda-ui/src/ui/scss'),\r\n        '@utils': path.resolve(__dirname, '/node_modules/pobeda-ui/src/ui/utils/utils'),\r\n    }\r\n}\r\n`;\r\n\r\nconst code = `\r\nimport ui from '@ui'\r\nimport utils from '@utils'\r\nimport Accordion from '.@ui/Accordion'\r\n \r\nconst accordion = new Accordion('[am-accordion=\"simple\"]')\r\n`;\r\n\r\nconst component = `\r\nconst accordion = new Accordion('[am-accordion=\"multiple\"]', {\r\n    duration: 800,\r\n    multiple: true,\r\n    init: false\r\n})\r\n \r\naccordion.init()\r\n \r\naccordion.on('init', (data) => {\r\n    console.log(data);\r\n})\r\n \r\naccordion.on('change', (tab, panel) => {\r\n    console.log(tab, panel);\r\n})\r\n`;\r\n\r\nconst scss = `\r\n@import './yourVariablesComponent.scss';\r\n@import 'node_modules/pobeda-ui/src/ui/scss/am-accordion.scss';\r\n`;\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            npm,\r\n            webpack,\r\n            code,\r\n            component,\r\n            scss\r\n        }\r\n\r\n        // this.npm = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.npm.current.innerHTML = this.state.npm;\r\n        // this.props.history.push('/markup/grid')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Начало работы' }\r\n                    headerText={ 'Компоненты и утилиты для построения интерфейса' }\r\n                >\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Установка и использование</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">npm</h2>\r\n                                    {/* <div className=\"example__preview\" ref={this.npm}></div> */}\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.npm}\r\n                                            onValueChange={npm => { this.setState({ npm }); this.npm.current.innerHTML = npm}}\r\n                                            readOnly={true}\r\n                                            highlight={npm => highlight(npm, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div> \r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">webpack</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.webpack}\r\n                                            readOnly={true}\r\n                                            highlight={webpack => highlight(webpack, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div> \r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">code</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.code}\r\n                                            readOnly={true}\r\n                                            highlight={code => highlight(code, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div> \r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">component</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.component}\r\n                                            readOnly={true}\r\n                                            highlight={component => highlight(component, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div> \r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">scss</h2>\r\n                                    <p className=\"example__about\">Add component styles to your local styles file</p>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.scss}\r\n                                            readOnly={true}\r\n                                            highlight={scss => highlight(scss, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>                                \r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React, { Component } from 'react'\r\nimport './CopyText.scss'\r\n\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\n\r\nfunction copyHandler(copyText) {\r\n    const innerContent = copyText.innerHTML\r\n\r\n    function listener(e) {\r\n        e.clipboardData.setData(\"text/html\", innerContent)\r\n        e.clipboardData.setData(\"text/plain\", innerContent)\r\n        e.preventDefault()\r\n    }\r\n\r\n    // var range = document.createRange();\r\n    // range.selectNode(ta);\r\n    // window.getSelection().addRange(range);\r\n\r\n    // //пытаемся скопировать текст в буфер обмена\r\n    // try {\r\n    //     document.execCommand('copy');\r\n    // } catch(err) {\r\n    //     console.log('Can`t copy, boss');\r\n    // }\r\n    // //очистим выделение текста, чтобы пользователь \"не парился\"\r\n    // window.getSelection().removeAllRanges();\r\n\r\n    document.addEventListener(\"copy\", listener)\r\n    document.execCommand(\"copy\")\r\n    document.removeEventListener(\"copy\", listener)\r\n}\r\n\r\nclass CopyText extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.text = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderCopy()\r\n    }\r\n\r\n    renderCopy = () => {\r\n        let language = this.props.language,\r\n            code;\r\n\r\n        if (language === 'html') {\r\n            code = highlight(this.props.copyText, languages.html)\r\n        } else {\r\n            code = highlight(this.props.copyText, languages.javascript)\r\n        }\r\n\r\n        if (this.text.current) {\r\n            this.text.current.innerHTML = code\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={'copy'}>\r\n                <span className=\"copy__text\" ref={this.text}>{this.props.copyText}</span>\r\n                <span className=\"copy__text-hidden\" hidden>{this.props.copyText}</span>\r\n                <span title=\"Скопировать\" className=\"copy__button\" am-icon=\"icon_document\" onClick={(e) => copyHandler(e.target.closest('.copy').querySelector('.copy__text-hidden'))}></span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CopyText","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst grid_x4 = `\r\n<div am-container=\"grid\">\r\n    <div am-grid=\"container\" spacing=\"2\">\r\n        <div am-grid=\"item\" elg=\"3\" md=\"6\" sm=\"12\" spacing=\"1\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" md=\"6\" sm=\"12\" spacing=\"1\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" md=\"6\" sm=\"12\" spacing=\"1\">3 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" md=\"6\" sm=\"12\" spacing=\"1\">4 колонка</div>\r\n    </div>\r\n\r\n    <div am-grid=\"container\" spacing=\"2\">\r\n        <div am-grid=\"item\" elg=\"3\" md=\"6\" sm=\"12\" spacing=\"1\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" md=\"6\" sm=\"12\" spacing=\"1\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" md=\"6\" sm=\"12\" spacing=\"1\">3 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" md=\"6\" sm=\"12\" spacing=\"1\">4 колонка</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst gridAlign = `\r\n<div am-container=\"grid\">\r\n    <div am-grid=\"container\" spacing=\"1\" justify=\"center\" align-items=\"start\">\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">3 колонка</div>\r\n    </div>\r\n    <div am-grid=\"container\" spacing=\"1\" justify=\"center\" align-items=\"center\">\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">3 колонка</div>\r\n    </div>\r\n    <div am-grid=\"container\" spacing=\"1\" justify=\"center\" align-items=\"end\">\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">3 колонка</div>\r\n    </div>\r\n    <div am-grid=\"container\" spacing=\"1\" justify=\"start\" align-items=\"center\">\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">3 колонка</div>\r\n    </div>\r\n    <div am-grid=\"container\" spacing=\"1\" justify=\"center\" align-items=\"center\">\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">3 колонка</div>\r\n    </div>\r\n    <div am-grid=\"container\" spacing=\"1\" justify=\"end\" align-items=\"center\">\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"3\" spacing=\"1\">3 колонка</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst gridSize = `\r\n<div am-container=\"grid\">\r\n    <div am-grid=\"container\" spacing=\"2\">\r\n        <div am-grid=\"item\" elg=\"2\" lg=\"4\" md=\"6\" sm=\"12\" spacing=\"2\">1 колонка</div>\r\n        <div am-grid=\"item\" elg=\"2\" lg=\"4\" md=\"6\" sm=\"12\" spacing=\"2\">2 колонка</div>\r\n        <div am-grid=\"item\" elg=\"2\" lg=\"4\" md=\"6\" sm=\"12\" spacing=\"2\">3 колонка</div>\r\n        <div am-grid=\"item\" elg=\"2\" lg=\"4\" md=\"6\" sm=\"12\" spacing=\"2\">4 колонка</div>\r\n        <div am-grid=\"item\" elg=\"2\" lg=\"4\" md=\"6\" sm=\"12\" spacing=\"2\">5 колонка</div>\r\n        <div am-grid=\"item\" elg=\"2\" lg=\"4\" md=\"6\" sm=\"12\" spacing=\"2\">6 колонка</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst container = `\r\n<div am-wrapper=\"contentName\">\r\n    <div am-container=\"contentName\">\r\n        content\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst scssVariables = `\r\n// Container\r\n$container-width: 1170px;\r\n$container-width-lg: 960px;\r\n$container-width-md: 768px;\r\n$container-width-sm: 100%;\r\n\r\n// Grid\r\n$columns: 12;\r\n$offset: 30px;\r\n\r\n$offset-lg: 30px;\r\n$offset-md: 30px;\r\n$offset-sm: 10px;\r\n\r\n// Breakpoints\r\n$lg: 1169px;\r\n$md: 959px;\r\n$sm: 767px;\r\n`;\r\n\r\nexport class Grid extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            grid_x4,\r\n            gridSize,\r\n            gridAlign,\r\n            container,\r\n            scssVariables\r\n        }\r\n\r\n        this.grid_x4 = React.createRef()\r\n        this.gridSize = React.createRef()\r\n        this.gridAlign = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.grid_x4.current.innerHTML = this.state.grid_x4;\r\n        this.gridSize.current.innerHTML = this.state.gridSize;\r\n        this.gridAlign.current.innerHTML = this.state.gridAlign;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Сетка' }\r\n                    headerText={ 'Набор горизонтальных и вертикальных линий, создающих шаблон, по которому мы можем выстроить элементы дизайна.' }\r\n                >          \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-grid.scss';\" />  \r\n                    </div>        \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-modal.scss'\" />  \r\n                    </div>                            \r\n                </Header>\r\n                <Content className=\"grid\">\r\n                    <div className=\"example\">\r\n                        <Tabs /*selectedTab=\"examples\"*/ className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Правила использования.</h2>\r\n                                    <p className=\"example__about\">\r\n                                        Для обозначения колонки необходимо указать\r\n                                        <span className=\"token attr-name\"> am-grid</span><span className=\"token attr-value\"><span className=\"token punctuation\">=</span><span className=\"token punctuation\">\"</span>item<span className=\"token punctuation\">\"</span></span>. Все колонки должны оборачиваться в блок -\r\n                                        <span className=\"token attr-name\"> am-grid</span><span className=\"token attr-value\"><span className=\"token punctuation\">=</span><span className=\"token punctuation\">\"</span>container<span className=\"token punctuation\">\"</span></span>.<span className=\"token attr-name\">&nbsp;spacing </span> (от 1 до 4) для того чтобы добавить отступ между колонками.\r\n                                    </p>\r\n                                    <p className=\"example__about\">\r\n                                        Ниже приведен пример из 4 колонок\r\n                                    </p>\r\n                                    <div className=\"example__preview\" ref={this.grid_x4}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.grid_x4}\r\n                                            onValueChange={grid_x4 => {\r\n                                                this.setState({ grid_x4});\r\n                                                this.grid_x4.current.innerHTML = grid_x4\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={grid_x4 => highlight(grid_x4, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <h2 className=\"example__header\">Горизонтальное и вертикальное выравнивание.</h2>\r\n                                    <ul className=\"example__list\">\r\n                                        <li>Направление главной оси - direction</li>\r\n                                        <li>Выравнивание по главной оси - justify</li>\r\n                                        <li>Выравнивание по поперечной оси - align-items</li>\r\n                                        <li>Выравнивание строк - align-content</li>\r\n                                    </ul>\r\n                                    <div className=\"example__preview gridAlign\" ref={this.gridAlign}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.gridAlign}\r\n                                            onValueChange={gridAlign => {\r\n                                                this.setState({ gridAlign});\r\n                                                this.gridAlign.current.innerHTML = gridAlign\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={gridAlign => highlight(gridAlign, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <h2 className=\"example__header\">Брейкпоинты.</h2>\r\n                                    {/* <p className=\"example__about\">\r\n                                        По умолчанию каждый столбец имеет 100% ширину, для того использовать адаптивную сетку, на колонках используются специальные атрибуты соответствующих брейкпоинтов и значение в них это число сколько колонок будет занимать столбец сетки:\r\n                                    </p> */}\r\n                                    <ul className=\"example__list\">\r\n                                        <li>elg - вне зависимости от ширины экрана</li>\r\n                                        <li>lg - размер экрана &le; <span className=\"token attr-value\"> 1169px</span></li>\r\n                                        <li>md - размер экрана &le;<span className=\"token attr-value\"> 959px</span></li>\r\n                                        <li>sm - размер экрана &le;  <span className=\"token attr-value\"> 767px</span></li>\r\n                                        <li>Количество столбцов 12</li>\r\n                                    </ul>\r\n                                    <div className=\"example__preview\" ref={this.gridSize}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.gridSize}\r\n                                            onValueChange={gridSize => {\r\n                                                this.setState({ gridSize});\r\n                                                this.gridSize.current.innerHTML = gridSize\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={gridSize => highlight(gridSize, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <h2 className=\"example__header\">Контейнеры.</h2>\r\n                                    <p className=\"example__about\">\r\n                                        Отцентированый контейнер \r\n                                        <span className=\"token attr-name\"> am-container</span>, контент который необходимо растянуть на всю ширину экрана <span className=\"token attr-name\"> am-container-fluid</span>.\r\n                                    </p>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                                value={this.state.container}\r\n                                                onValueChange={container => {\r\n                                                    this.setState({ container });\r\n                                                }}\r\n                                                readOnly={true}\r\n                                                highlight={container => highlight(container, languages.markup)}\r\n                                                padding={0}\r\n                                            />\r\n                                    </div>\r\n                                    \r\n                                    <h2 className=\"example__header\">scss переменные.</h2>\r\n                                    <p className=\"example__about\">                                        \r\n                                        <div style={{display: 'flex', alignItems: 'center'}}>\r\n                                            <span style={{marginTop: '9px', marginRight: '10px'}}>Перед import'ом scss компонента, добавить свои переменные:</span>  \r\n                                        </div>   \r\n                                    </p>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                                value={`@import './yourVariablesComponent.scss'; \r\n@import 'node_modules/pobeda-ui/src/ui/scss/am-grid.scss';`}\r\n                                                onValueChange={scssVariables => {\r\n                                                    this.setState({ scssVariables });\r\n                                                }}\r\n                                                readOnly={true}\r\n                                                highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                                padding={0}\r\n                                            />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                                value={this.state.scssVariables}\r\n                                                onValueChange={scssVariables => {\r\n                                                    this.setState({ scssVariables });\r\n                                                }}\r\n                                                readOnly={true}\r\n                                                highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                                padding={0}\r\n                                            />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                            Grid container\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>direction</td>\r\n                                                <td>row</td>\r\n                                                <td>row&nbsp;| row-reverse&nbsp;| column&nbsp;| column-reverse&nbsp;|</td>\r\n                                                <td>Направление главной оси</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>justify</td>\r\n                                                <td>start</td>\r\n                                                <td>start&nbsp;| end&nbsp;| center&nbsp;| space-between&nbsp;| space-around&nbsp;|</td>\r\n                                                <td>Выравнивание по главной оси</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>align-items</td>\r\n                                                <td>stretch</td>\r\n                                                <td>start&nbsp;| end&nbsp;| center&nbsp;| baseline&nbsp;| stretch&nbsp;|</td>\r\n                                                <td>Выравнивание по поперечной оси</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>align-content</td>\r\n                                                <td></td>\r\n                                                <td>start&nbsp;| end&nbsp;| center&nbsp;| space-between&nbsp;| space-around&nbsp;| stretch&nbsp;|</td>\r\n                                                <td>Выравнивание строк</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>spacing</td>\r\n                                                <td></td>\r\n                                                <td>1&nbsp;| 2&nbsp;| 3&nbsp;| 4&nbsp;|</td>\r\n                                                <td>Отступы между колонками</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                            Grid item\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>align-self</td>\r\n                                                <td>start</td>\r\n                                                <td>start&nbsp;| end&nbsp;| center&nbsp;| baseline&nbsp;| stretch&nbsp;|</td>\r\n                                                <td>Выравнивание строк</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>spacing</td>\r\n                                                <td></td>\r\n                                                <td>1&nbsp;| 2&nbsp;| 3&nbsp;| 4&nbsp;|</td>\r\n                                                <td>Отступы между строками</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>elg</td>\r\n                                                <td></td>\r\n                                                <td>1-12</td>\r\n                                                <td>Ширина колонки вне зависимости от ширины экрана</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>lg</td>\r\n                                                <td></td>\r\n                                                <td>1-12</td>\r\n                                                <td>Ширина колонки при размере экрана &le; 1169px</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>md</td>\r\n                                                <td></td>\r\n                                                <td>1-12</td>\r\n                                                <td>Ширина колонки при размере экрана &le; 959px</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>sm</td>\r\n                                                <td></td>\r\n                                                <td>1-12</td>\r\n                                                <td>Ширина колонки при размере экрана &le; 767px</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\n\r\nexport class Colors extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Colors' }\r\n                    headerText={ 'Главные цвета.' }\r\n                />\r\n                <Content>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\n\r\nexport class Typography extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Typography' }\r\n                    headerText={ 'Шрифты.' }\r\n                />\r\n                <Content>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react'\r\n// import Editor from 'react-simple-code-editor';\r\n// import { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst iconPreview = `\r\n<span am-icon=\"logo\"></span>\r\n`;\r\n\r\nexport class Icons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            iconPreview,\r\n            iconCopyText: '',\r\n            iconCopyRender: false\r\n        }\r\n\r\n        this.iconPreview = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.grid_x4.current.innerHTML = this.state.grid_x4\r\n    }\r\n\r\n    iconCopyHandler = (text, close = false) => {\r\n        this.setState({\r\n            iconCopyRender: false\r\n        })\r\n        setTimeout(() => {\r\n            if (close) {\r\n                this.setState({\r\n                    iconCopyRender: false\r\n                })\r\n                return\r\n            }\r\n            this.setState({\r\n                iconCopyText: text,\r\n                iconCopyRender: true\r\n            })\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Иконки' }\r\n                    /*headerText={ 'Набор горизонтальных и вертикальных линий, создающих шаблон, по которому мы можем выстроить элементы дизайна.' }*/\r\n                >\r\n                    {/* <CopyText copyText=\"import number_format from 'src/js/base_methods/number_format.js'\" /> */}\r\n                </Header>\r\n                <Content className=\"icons\">\r\n                    <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                        <ul className=\"tabs__links\">\r\n                            <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                            {/* <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li> */}\r\n                            <TabSlider tag=\"slider\"/>\r\n                        </ul>\r\n                        <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                            {/* Logo */}\r\n                            <h2 className=\"example__header\">Logo</h2>\r\n                            <div am-grid=\"container\" width=\"auto\" spacing=\"2\" className=\"icons__container\">\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"logo_main\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"logo_main\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">logo_main</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"logo_medium\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"logo_medium\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">logo_medium</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"logo_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"logo_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">logo_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"logo_text\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"logo_text\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">logo_text</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"logo_christmas\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"logo_christmas\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">logo_christmas</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"logo_christmas_white_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"logo_christmas_white_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">logo_christmas_white_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"logo_white_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"logo_white_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">logo_white_small</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Catalog */}\r\n                            <h2 className=\"example__header\">Catalog</h2>\r\n                            <div am-grid=\"container\" width=\"auto\" spacing=\"2\" className=\"icons__container\">\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_menu\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_menu\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_menu</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_menu_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_menu_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_menu_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_menuM\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_menuM\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_menuM</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_menuM_gray\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_menuM_gray\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_menuM_gray</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_car\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_car\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_car</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_car_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_car_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_car_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_child\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_child\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_child</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_child_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_child_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_child_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_clock_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_clock_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_clock_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_clothes\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_clothes\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_clothes</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_computer\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_computer\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_computer</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_computer_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_computer_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_computer_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_forhome\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_forhome\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_forhome</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_forhome_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_forhome_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_forhome_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_games\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_games\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_games</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_games_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_games_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_games_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_gym\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_gym\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_gym</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_gym_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_gym_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_gym_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_music\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_music\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_music</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_music_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_music_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_music_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_phone\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_phone\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_phone</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_phone_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_phone_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_phone_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_photo\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_photo\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_photo</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_photo_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_photo_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_photo_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_tool_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_tool_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_tool_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_tv\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_tv\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_tv</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"catalog_tv_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"catalog_tv_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">catalog_tv_small</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Action */}\r\n                            <h2 className=\"example__header\">Action</h2>\r\n                            <div am-grid=\"container\" width=\"auto\" spacing=\"2\" className=\"icons__container\">\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_back_mini\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_back_mini\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_back_mini</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_big_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_big_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_big_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_big\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_big\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_big</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_down_blue\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_down_blue\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_down_blue</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_down_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_down_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_down_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_down_mini\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_down_mini\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_down_mini</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_down_red_mini\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_down_red_mini\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_down_red_mini</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_next_mini\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_next_mini\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_next_mini</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrow_up_mini\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrow_up_mini\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrow_up_mini</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrowlong_back_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrowlong_back_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrowlong_back_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrowlong_next_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrowlong_next_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrowlong_next_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_arrowlong_next\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_arrowlong_next\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_arrowlong_next</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_basket_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_basket_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_basket_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_basket\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_basket\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_basket</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_check_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_check_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_check_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_check_white\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_check_white\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_check_white</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_close_black\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_close_black\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_close_black</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_close_gray_mini\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_close_gray_mini\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_close_gray_mini</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_close_gray\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_close_gray\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_close_gray</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_eye\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_eye\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_eye</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_favorite_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_favorite_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_favorite_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_favorite_red_active\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_favorite_red_active\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_favorite_red_active</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_favorite_red_small_active\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_favorite_red_small_active\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_favorite_red_small_active</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_favorite_red_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_favorite_red_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_favorite_red_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_favorite_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_favorite_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_favorite_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_info_blue\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_info_blue\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_info_blue</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_info_white\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_info_white\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_info_white</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_info\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_info\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_info</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_login_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_login_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_login_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_logout_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_logout_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_logout_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_play\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_play\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_play</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_reload_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_reload_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_reload_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_search_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_search_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_search_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_search_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_search_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_search_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_search\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_search\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_search</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_searching_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_searching_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_searching_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_send_rotate\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_send_rotate\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_send_rotate</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_send\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_send\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_send</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"a_settings\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"a_settings\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">a_settings</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Interface */}\r\n                            <h2 className=\"example__header\">Interface</h2>\r\n                            <div am-grid=\"container\" width=\"auto\" spacing=\"2\" className=\"icons__container\">\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_24hours\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_24hours\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_24hours</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_bonuse_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_bonuse_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_bonuse_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_box_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_box_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_box_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_box\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_box\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_box</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_car_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_car_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_car_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_cart_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_cart_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_cart_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_chat\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_chat\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_chat</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_credit\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_credit\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_credit</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_delivery\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_delivery\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_delivery</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_document_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_document_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_document_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_favorites_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_favorites_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_favorites_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_filial\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_filial\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_filial</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_form\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_form\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_form</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_globus_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_globus_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_globus_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_headphone\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_headphone\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_headphone</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_home\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_home\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_home</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_pass_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_pass_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_pass_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_people_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_people_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_people_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_percent_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_percent_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_percent_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_phone_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_phone_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_phone_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_phone_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_phone_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_phone_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_photo_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_photo_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_photo_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_place_dark\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_place_dark\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_place_dark</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_place_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_place_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_place_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_place_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_place_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_place_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_placeM_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_placeM_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_placeM_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_question\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_question\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_question</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_ring_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_ring_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_ring_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_ring\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_ring\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_ring</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_rub\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_rub\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_rub</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_time_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_time_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_time_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_user_avatar\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_user_avatar\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_user_avatar</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_user_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_user_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_user_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_user\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_user\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_user</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_wallet\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_wallet\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_wallet</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_wrench_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_wrench_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_wrench_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"ui_youtube\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"ui_youtube\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">ui_youtube</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Social */}\r\n                            <h2 className=\"example__header\">Social</h2>\r\n                            <div am-grid=\"container\" width=\"auto\" spacing=\"2\" className=\"icons__container\">\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"social_instagramm\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"social_instagramm\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">social_instagramm</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"social_vk\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"social_vk\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">social_vk</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"social_youtube\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"social_youtube\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">social_youtube</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"social_whatsapp\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"social_whatsapp\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">social_whatsapp</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"social_viber\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"social_viber\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">social_viber</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Image */}\r\n                            <h2 className=\"example__header\">Image</h2>\r\n                            <div am-grid=\"container\" width=\"auto\" spacing=\"2\" className=\"icons__container\">\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"cart_empty\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"cart_empty\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">cart_empty</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"cart_empty_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"cart_empty_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">cart_empty_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"favorite_empty\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"favorite_empty\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">favorite_empty</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"favorite_empty_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"favorite_empty_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">favorite_empty_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"order_empty\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"order_empty\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">order_empty</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"order_empty_small\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"order_empty_small\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">order_empty_small</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"pseudo_photo\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"pseudo_photo\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">pseudo_photo</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"confirm_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"confirm_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">confirm_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"exclamation_red\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"exclamation_red\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">exclamation_red</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"place_red_big\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"place_red_big\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">place_red_big</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-grid=\"item\" spacing=\"2\">\r\n                                    <div className=\"icons__group\" onClick={() => this.iconCopyHandler('<span am-icon=\"map_dot\"></span>')}>\r\n                                        <div className=\"icons__icon\">\r\n                                            <span am-icon=\"map_dot\"></span>\r\n                                        </div>\r\n                                        <span className=\"icons__group-text\">map_dot</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </TabContent>\r\n                    </Tabs>\r\n                    {\r\n                        this.state.iconCopyRender &&\r\n                        <div className=\"iconCopy\">\r\n                            <div am-container={''}>\r\n                                <CopyText copyText={this.state.iconCopyText} language=\"html\"/>\r\n                            </div>\r\n                            <div className=\"iconCopy__close\" onClick={() => this.iconCopyHandler('', true)}>\r\n                                <span am-icon=\"a_close_gray\"></span>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\n\r\nimport { Grid } from './Grid/Grid.jsx'\r\nimport { Colors } from './Colors/Colors.jsx'\r\nimport { Typography } from './Typography/Typography.jsx'\r\nimport { Icons } from './Icons/Icons.jsx'\r\n\r\nclass MarkupView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            views: {\r\n                grid: <Grid/>,\r\n                colors: <Colors/>,\r\n                typography: <Typography/>,\r\n                icons: <Icons/>\r\n            },\r\n            renderView: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const view = this.state.views[this.props.match.params.name]\r\n\r\n        if (!view) {\r\n            this.props.history.push('/')\r\n        } else {\r\n            this.setState({\r\n                renderView: true\r\n            })\r\n        }\r\n    }\r\n\r\n    renderView = () => {\r\n        const name = this.props.match.params.name\r\n        const views = {...this.state.views}\r\n\r\n        for(let view in views) {\r\n            if (name === view) {\r\n                return (\r\n                    views[view]\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                { this.state.renderView && this.renderView() }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MarkupView","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst codeButton_main = `\r\n<button am-button=\"main\">Главная кнопка</button>\r\n<button am-button=\"main\" disabled>Главная кнопка</button>\r\n`;\r\n\r\nconst codeButton_hover = `\r\n<button am-button=\"white\">Ховер кнопка</button>\r\n<button am-button=\"white\" disabled>Ховер кнопка</button>\r\n`;\r\n\r\nconst codeButton_disabled = `\r\n<button am-button=\"disabled\">Заблокированная кнопка</button>\r\n<a am-button=\"disabled\">Заблокированная кнопка</a>\r\n<div am-button=\"disabled\">Заблокированная кнопка</div>\r\n`;\r\n\r\nconst codeButton_default = `\r\n<button am-button>Обычная кнопка</button>\r\n<a am-button>Обычная кнопка</a>\r\n<div am-button>Обычная кнопка</div>\r\n`;\r\n\r\nconst scssVariables = `\r\n// Colors\r\n$color-main: #ff0000;\r\n$color-main-dark: #D9000D;\r\n$color-main-gray: #A3A2A1;\r\n`;\r\n\r\nexport class Button extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            codeButton_main,\r\n            codeButton_hover,\r\n            codeButton_disabled,\r\n            codeButton_default,\r\n            scssVariables\r\n        }\r\n\r\n        this.codeButton_main = React.createRef()\r\n        this.codeButton_hover = React.createRef()\r\n        this.codeButton_disabled = React.createRef()\r\n        this.codeButton_default = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.codeButton_main.current.innerHTML = this.state.codeButton_main;\r\n        this.codeButton_hover.current.innerHTML = this.state.codeButton_hover;\r\n        this.codeButton_disabled.current.innerHTML = this.state.codeButton_disabled;\r\n        this.codeButton_default.current.innerHTML = this.state.codeButton_default;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Button' }\r\n                    headerText={ 'Компонент кнопки.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-button.scss';\" />  \r\n                    </div>        \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-button.scss'\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Главная кнопка</h2>\r\n                                    <div className=\"example__preview\" ref={this.codeButton_main}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.codeButton_main}\r\n                                            onValueChange={codeButton_main => { this.setState({ codeButton_main }); this.codeButton_main.current.innerHTML = codeButton_main}}\r\n                                            readOnly={true}\r\n                                            highlight={codeButton_main => highlight(codeButton_main, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Ховер кнопка</h2>\r\n                                    <div className=\"example__preview\" ref={this.codeButton_hover}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.codeButton_hover}\r\n                                            onValueChange={codeButton_hover => { this.setState({ codeButton_hover }); this.codeButton_hover.current.innerHTML = codeButton_hover}}\r\n                                            readOnly={true}\r\n                                            highlight={codeButton_hover => highlight(codeButton_hover, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Заблокированная кнопка</h2>\r\n                                    <div className=\"example__preview\" ref={this.codeButton_disabled}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.codeButton_disabled}\r\n                                            onValueChange={codeButton_disabled => { this.setState({ codeButton_disabled }); this.codeButton_disabled.current.innerHTML = codeButton_disabled}}\r\n                                            readOnly={true}\r\n                                            highlight={codeButton_disabled => highlight(codeButton_disabled, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычная кнопка</h2>\r\n                                    <div className=\"example__preview\" ref={this.codeButton_default}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.codeButton_default}\r\n                                            onValueChange={codeButton_default => { this.setState({ codeButton_default }); this.codeButton_default.current.innerHTML = codeButton_default}}\r\n                                            readOnly={true}\r\n                                            highlight={codeButton_default => highlight(codeButton_default, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <h2 className=\"example__header\">scss переменные.</h2>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                            value={this.state.scssVariables}\r\n                                            onValueChange={scssVariables => {\r\n                                                this.setState({ scssVariables });\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                </div>                                \r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './input.scss';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst input = `\r\n<div am-input>\r\n    <input type=\"text\"/>\r\n</div>\r\n\r\n<div am-input accept>\r\n    <input type=\"text\" placeholder=\"Обычное поле\"/>\r\n</div>\r\n\r\n<div am-input error>\r\n    <input type=\"text\" placeholder=\"Обычное поле\"/>\r\n</div>\r\n`;\r\n\r\nconst input_label = `\r\n<div am-input=\"name\">\r\n    <div am-hint=\"top\">Имя</div>\r\n    <input name=\"name\" type=\"text\" placeholder=\"Имя\">\r\n</div>\r\n`;\r\n\r\nconst input_validate = `\r\n<div am-input=\"name\" accept>\r\n    <div am-hint=\"top\">Имя</div>\r\n    <div am-input-group>\r\n        <div am-check></div>\r\n        <input name=\"name\" type=\"text\" placeholder=\"Имя\">\r\n    </div>\r\n</div>\r\n\r\n<div am-input=\"name\" error>\r\n    <div am-hint=\"top\">Имя <span am-required=\"\">*</span></div>\r\n    <div am-input-group>\r\n        <div am-check></div>\r\n        <input name=\"name\" type=\"text\" placeholder=\"Имя\">\r\n    </div>\r\n    <div am-hint=\"bottom\"><span am-required=\"\">*</span> обязательно для заполнения</div>\r\n</div>\r\n`;\r\n\r\nconst input_search = `\r\n<div am-search>\r\n    <div am-search-icon>\r\n        <span am-icon=\"a_search_dark\"></span>\r\n    </div>\r\n    <input name=\"search\" type=\"text\" placeholder=\"Поиск\">\r\n    <button am-search-button>Найти</button>\r\n</div>\r\n`;\r\n\r\nconst textarea = `\r\n<div am-input=\"message\">\r\n    <div am-hint=\"top\">Сообщение</div>\r\n    <div am-input-group>\r\n        <div am-check></div>\r\n        <textarea name=\"message\" rows=\"7\" placeholder=\"Ваше сообщение.\"></textarea>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst scssVariables = `\r\n// Colors\r\n$color-main-gray-light: #E6E4E1 !default;\r\n$color-main-green: #94F57C !default;\r\n$color-main: #ff0000 !default;\r\n$color-main-dark: #D9000D !default;\r\n$color-main-gray: #A3A2A1 !default;\r\n`;\r\n\r\nexport class Input extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            input,\r\n            input_label,\r\n            input_validate,\r\n            input_search,\r\n            textarea,\r\n            scssVariables\r\n        }\r\n\r\n        this.input = React.createRef()\r\n        this.input_label = React.createRef()\r\n        this.input_validate = React.createRef()\r\n        this.input_search = React.createRef()\r\n        this.textarea = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.input.current.innerHTML = this.state.input;\r\n        this.input_label.current.innerHTML = this.state.input_label;\r\n        this.input_validate.current.innerHTML = this.state.input_validate;\r\n        this.input_search.current.innerHTML = this.state.input_search;\r\n        this.textarea.current.innerHTML = this.state.textarea;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Input' }\r\n                    headerText={ 'Компонент полей ввода.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-input.scss';\" />  \r\n                    </div>        \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-input.scss'\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.input}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.input}\r\n                                            readOnly={true}\r\n                                            onValueChange={input => { this.setState({ input }); this.input.current.innerHTML = input}}\r\n                                            highlight={input => highlight(input, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">С лейблами</h2>\r\n                                    <div className=\"example__preview\" ref={this.input_label}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.input_label}\r\n                                            readOnly={true}\r\n                                            onValueChange={input_label => { this.setState({ input_label }); this.input_label.current.innerHTML = input_label}}\r\n                                            highlight={input_label => highlight(input_label, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Валидация</h2>\r\n                                    <div className=\"example__preview\" ref={this.input_validate}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.input_validate}\r\n                                            readOnly={true}\r\n                                            onValueChange={input_validate => { this.setState({ input_validate }); this.input_validate.current.innerHTML = input_validate}}\r\n                                            highlight={input_validate => highlight(input_validate, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Поиск</h2>\r\n                                    <div className=\"example__preview\" ref={this.input_search}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.input_search}\r\n                                            readOnly={true}\r\n                                            onValueChange={input_search => { this.setState({ input_search }); this.input_search.current.innerHTML = input_search}}\r\n                                            highlight={input_search => highlight(input_search, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Textarea</h2>\r\n                                    <div className=\"example__preview\" ref={this.textarea}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.textarea}\r\n                                            readOnly={true}\r\n                                            onValueChange={textarea => { this.setState({ textarea }); this.textarea.current.innerHTML = textarea}}\r\n                                            highlight={textarea => highlight(textarea, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <h2 className=\"example__header\">scss переменные.</h2>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                            value={this.state.scssVariables}\r\n                                            onValueChange={scssVariables => {\r\n                                                this.setState({ scssVariables });\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                </div> \r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst checkbox = `\r\n<div am-checkbox>\r\n    <input am-checkbox-input name=\"sale\" type=\"checkbox\">\r\n    <div am-checkbox-wrapper>\r\n        <div am-checkbox-icon></div>\r\n        <div am-checkbox-label>Товары со скидкой</div>\r\n    </div>\r\n</div>\r\n\r\n<div am-checkbox>\r\n    <input type=\"checkbox\" name=\"sale\">\r\n    <label am-checkbox-wrapper>\r\n        <span am-checkbox-icon></span>\r\n        <span am-checkbox-label>Товары со скидкой</span>\r\n    </label>\r\n</div>\r\n\r\n<div am-checkbox>\r\n    <input type=\"checkbox\" name=\"sale\" checked>\r\n    <span am-checkbox-icon></span>\r\n    <span am-checkbox-label>Товары со скидкой</span>\r\n</div>\r\n`;\r\n\r\nconst checkbox_group = `\r\n<div am-checkbox>\r\n    <input am-checkbox-input name=\"sale\" type=\"checkbox\">\r\n    <div am-checkbox-wrapper>\r\n        <div am-checkbox-icon></div>\r\n        <div am-checkbox-label>Товары со скидкой</div>\r\n    </div>\r\n</div>\r\n\r\n<div am-checkbox>\r\n    <input type=\"checkbox\" name=\"sale\">\r\n    <label am-checkbox-wrapper>\r\n        <span am-checkbox-icon></span>\r\n        <span am-checkbox-label>Товары со скидкой</span>\r\n    </label>\r\n</div>\r\n\r\n<div am-checkbox>\r\n    <input type=\"checkbox\" name=\"sale\" checked>\r\n    <span am-checkbox-icon></span>\r\n    <span am-checkbox-label>Товары со скидкой</span>\r\n</div>\r\n`;\r\n\r\nconst checkbox_disabled = `\r\n<div am-checkbox disabled>\r\n    <input am-checkbox-input name=\"sale\" type=\"checkbox\" disabled>\r\n    <div am-checkbox-wrapper>\r\n        <div am-checkbox-icon></div>\r\n        <div am-checkbox-label>Товары со скидкой</div>\r\n    </div>\r\n</div>\r\n\r\n<div am-checkbox disabled>\r\n    <input type=\"checkbox\" name=\"sale\" disabled>\r\n    <label am-checkbox-wrapper>\r\n        <span am-checkbox-icon></span>\r\n        <span am-checkbox-label>Товары со скидкой</span>\r\n    </label>\r\n</div>\r\n\r\n<div am-checkbox disabled>\r\n    <input type=\"checkbox\" name=\"sale\" checked disabled>\r\n    <span am-checkbox-icon></span>\r\n    <span am-checkbox-label>Товары со скидкой</span>\r\n</div>\r\n`;\r\n\r\nconst scssVariables = `\r\n// Colors\r\n$color-main-gray-light: #E6E4E1 !default;\r\n$color-main-blue-blur: #475077 !default;\r\n`;\r\n\r\nexport class Checkbox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            checkbox,\r\n            checkbox_group,\r\n            checkbox_disabled,\r\n            scssVariables\r\n        }\r\n\r\n        this.checkbox = React.createRef()\r\n        this.checkbox_group = React.createRef()\r\n        this.checkbox_disabled = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkbox.current.innerHTML = this.state.checkbox;\r\n        this.checkbox_group.current.innerHTML = this.state.checkbox_group;\r\n        this.checkbox_disabled.current.innerHTML = this.state.checkbox_disabled;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Checkbox' }\r\n                    headerText={ 'Компонент чекбокса.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-checkbox.scss'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-checkbox.scss';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.checkbox}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.checkbox}\r\n                                            readOnly={true}\r\n                                            onValueChange={checkbox => { this.setState({ checkbox }); this.checkbox.current.innerHTML = checkbox}}\r\n                                            highlight={checkbox => highlight(checkbox, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.checkbox_group}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.checkbox_group}\r\n                                            readOnly={true}\r\n                                            onValueChange={checkbox_group => { this.setState({ checkbox_group }); this.checkbox_group.current.innerHTML = checkbox_group}}\r\n                                            highlight={checkbox_group => highlight(checkbox_group, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Заблокированные</h2>\r\n                                    <div className=\"example__preview\" ref={this.checkbox_disabled}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.checkbox_disabled}\r\n                                            readOnly={true}\r\n                                            onValueChange={checkbox_disabled => { this.setState({ checkbox_disabled }); this.checkbox_disabled.current.innerHTML = checkbox_disabled}}\r\n                                            highlight={checkbox_disabled => highlight(checkbox_disabled, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <h2 className=\"example__header\">scss переменные.</h2>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                            value={this.state.scssVariables}\r\n                                            onValueChange={scssVariables => {\r\n                                                this.setState({ scssVariables });\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst radio = `\r\n<div am-radio>\r\n    <input am-radio-input type=\"radio\">\r\n    <div am-radio-wrapper>\r\n        <div am-radio-icon></div>\r\n        <div am-radio-label>Товары со скидкой</div>\r\n    </div>\r\n</div>\r\n\r\n<div am-radio>\r\n    <input type=\"radio\">\r\n    <label am-radio-wrapper>\r\n        <span am-radio-icon></span>\r\n        <span am-radio-label>Товары со скидкой</span>\r\n    </label>\r\n</div>\r\n\r\n<div am-radio>\r\n    <input type=\"radio\" checked>\r\n    <span am-radio-icon></span>\r\n    <span am-radio-label>Товары со скидкой</span>\r\n</div>\r\n`;\r\n\r\nconst radio_group = `\r\n<div am-radio>\r\n    <input am-radio-input name=\"sale\" type=\"radio\">\r\n    <div am-radio-wrapper>\r\n        <div am-radio-icon></div>\r\n        <div am-radio-label>Товары со скидкой</div>\r\n    </div>\r\n</div>\r\n\r\n<div am-radio>\r\n    <input type=\"radio\" name=\"sale\">\r\n    <label am-radio-wrapper>\r\n        <span am-radio-icon></span>\r\n        <span am-radio-label>Товары со скидкой</span>\r\n    </label>\r\n</div>\r\n\r\n<div am-radio>\r\n    <input type=\"radio\" name=\"sale\" checked>\r\n    <span am-radio-icon></span>\r\n    <span am-radio-label>Товары со скидкой</span>\r\n</div>\r\n`;\r\n\r\nconst radio_disabled = `\r\n<div am-radio disabled>\r\n    <input am-radio-input name=\"sale\" type=\"radio\" disabled>\r\n    <div am-radio-wrapper>\r\n        <div am-radio-icon></div>\r\n        <div am-radio-label>Товары со скидкой</div>\r\n    </div>\r\n</div>\r\n\r\n<div am-radio disabled>\r\n    <input type=\"radio\" name=\"sale\" disabled>\r\n    <label am-radio-wrapper>\r\n        <span am-radio-icon></span>\r\n        <span am-radio-label>Товары со скидкой</span>\r\n    </label>\r\n</div>\r\n\r\n<div am-radio disabled>\r\n    <input type=\"radio\" name=\"sale\" checked disabled>\r\n    <span am-radio-icon></span>\r\n    <span am-radio-label>Товары со скидкой</span>\r\n</div>\r\n`;\r\n\r\nconst scssVariables = `\r\n// Colors\r\n$color-main-blue-dark: #091F7C !default;\r\n$color-main-blue-blur: #475077 !default;\r\n`;\r\n\r\nexport class Radio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            radio,\r\n            radio_group,\r\n            radio_disabled,\r\n            scssVariables\r\n        }\r\n\r\n        this.radio = React.createRef()\r\n        this.radio_group = React.createRef()\r\n        this.radio_disabled = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.radio.current.innerHTML = this.state.radio;\r\n        this.radio_group.current.innerHTML = this.state.radio_group;\r\n        this.radio_disabled.current.innerHTML = this.state.radio_disabled;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Radio' }\r\n                    headerText={ 'Компонент радиокнопки.' }\r\n                >                    \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-radio.scss';\" />  \r\n                    </div>        \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-radio.scss'\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.radio}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.radio}\r\n                                            readOnly={true}\r\n                                            onValueChange={radio => { this.setState({ radio }); this.radio.current.innerHTML = radio}}\r\n                                            highlight={radio => highlight(radio, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Группа кнопок</h2>\r\n                                    <div className=\"example__preview\" ref={this.radio_group}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.radio_group}\r\n                                            readOnly={true}\r\n                                            onValueChange={radio_group => { this.setState({ radio_group }); this.radio_group.current.innerHTML = radio_group}}\r\n                                            highlight={radio_group => highlight(radio_group, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Заблокированные</h2>\r\n                                    <div className=\"example__preview\" ref={this.radio_disabled}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.radio_disabled}\r\n                                            readOnly={true}\r\n                                            onValueChange={radio_disabled => { this.setState({ radio_disabled }); this.radio_disabled.current.innerHTML = radio_disabled}}\r\n                                            highlight={radio_disabled => highlight(radio_disabled, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <h2 className=\"example__header\">scss переменные.</h2>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                            value={this.state.scssVariables}\r\n                                            onValueChange={scssVariables => {\r\n                                                this.setState({ scssVariables });\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                </div> \r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\nimport TooltipUI from '@ui/Tooltip'\r\n\r\nconst scssVariables = `\r\n// Tooltip\r\n$zIndex-tooltip: 99 !default;\r\n`;\r\n\r\nconst tooltip = `\r\n<div am-tooltip>\r\n    <div am-tooltip-header>tooltip</div>\r\n    <div am-tooltip-content>\r\n        <div am-tooltip-wrapper>\r\n            <div am-tooltip-arrow></div>\r\n            <ul>\r\n                <li>tooltip-item-1</li>\r\n                <li>tooltip-item-2</li>\r\n                <li>tooltip-item-3</li>\r\n                <li>tooltip-item-4</li>\r\n                <li>tooltip-item-5</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst tooltip_direction = `\r\n<div am-grid=\"container\" spacing=\"1\">\r\n    <div am-grid=\"item\" elg=\"3\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip-bottom (default)</div>\r\n            <div am-tooltip-content direction=\"bottom\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow></div>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"/uikit/components/tooltip\">/uikit/components/tooltip</a>\r\n                        </li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div am-grid=\"item\" elg=\"3\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip-left</div>\r\n            <div am-tooltip-content direction=\"left\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow></div>\r\n                    <ul>\r\n                        <li>tooltip-item-1</li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div am-grid=\"item\" elg=\"3\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip-top</div>\r\n            <div am-tooltip-content direction=\"top\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow></div>\r\n                    <ul>\r\n                        <li>tooltip-item-1</li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div am-grid=\"item\" elg=\"3\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip-right</div>\r\n            <div am-tooltip-content direction=\"right\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow></div>\r\n                    <ul>\r\n                        <li>tooltip-item-1</li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst tooltip_align = `\r\n<div am-grid=\"container\" spacing=\"1\">\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip align-left</div>\r\n            <div am-tooltip-content align=\"left\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow align=\"left\"></div>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"/uikit/components/tooltip\">/uikit/components/tooltip</a>\r\n                        </li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip align-stretch</div>\r\n            <div am-tooltip-content align=\"stretch\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow align=\"center\"></div>\r\n                    <ul>\r\n                        <li>tooltip-item-1</li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip align-right</div>\r\n            <div am-tooltip-content align=\"right\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow align=\"right\"></div>\r\n                    <ul>\r\n                        <li>tooltip-item-1</li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip align-right</div>\r\n            <div am-tooltip-content align=\"left\" direction=\"top\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow align=\"left\"></div>\r\n                    <ul>\r\n                        <li>tooltip-item-1</li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip align-right</div>\r\n            <div am-tooltip-content align=\"stretch\" direction=\"top\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow align=\"center\"></div>\r\n                    <ul>\r\n                        <li>tooltip-item-1</li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-tooltip>\r\n            <div am-tooltip-header>tooltip align-right</div>\r\n            <div am-tooltip-content align=\"right\" direction=\"top\">\r\n                <div am-tooltip-wrapper>\r\n                    <div am-tooltip-arrow align=\"right\"></div>\r\n                    <ul>\r\n                        <li>tooltip-item-1</li>\r\n                        <li>tooltip-item-2</li>\r\n                        <li>tooltip-item-3</li>\r\n                        <li>tooltip-item-4</li>\r\n                        <li>tooltip-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nexport class Tooltip extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            tooltip,\r\n            tooltip_direction,\r\n            tooltip_align,\r\n            scssVariables\r\n        }\r\n\r\n        this.tooltip = React.createRef()\r\n        this.tooltip_direction = React.createRef()\r\n        this.tooltip_align = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        TooltipUI.bubbleInit()\r\n\r\n        this.tooltip.current.innerHTML = this.state.tooltip;\r\n        this.tooltip_direction.current.innerHTML = this.state.tooltip_direction;\r\n        this.tooltip_align.current.innerHTML = this.state.tooltip_align;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Tooltip' }\r\n                    headerText={ 'Компонент всплывающего списка.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import Dropdown from '@ui/Tooltip'\" />  \r\n                    </div>   \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-tooltip.scss'\" />  \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-tooltip.scss';\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content className=\"tooltip\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                {/* <p className=\"example__description\">Кнопка используется как триггер для выполнения определённого действия. Кнопка однозначно сообщает пользователю, что произойдёт после нажатия на неё.</p> */}\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.tooltip}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tooltip}\r\n                                            readOnly={true}\r\n                                            onValueChange={tooltip => { this.setState({ tooltip }); this.tooltip.current.innerHTML = tooltip}}\r\n                                            highlight={tooltip => highlight(tooltip, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Направление списка</h2>\r\n                                    <p className=\"example__description\">Для чтобы изменить направление, используется атрибут <span className=\"token attr-name\"> direction</span><span className=\"token attr-value\"><span className=\"token punctuation\">=</span><span className=\"token punctuation\">\"</span>bottom|right|top|left<span className=\"token punctuation\">\" </span></span>\r\n                                    для тега <span className=\"token attr-name\">am-tooltip-content</span>\r\n                                    </p>\r\n                                    <div className=\"example__preview\" ref={this.tooltip_direction}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tooltip_direction}\r\n                                            readOnly={true}\r\n                                            onValueChange={tooltip_direction => { this.setState({ tooltip_direction }); this.tooltip_direction.current.innerHTML = tooltip_direction}}\r\n                                            highlight={tooltip_direction => highlight(tooltip_direction, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Выравнивание списка</h2>\r\n                                    <p className=\"example__description\">Для чтобы изменить выравнивание, используется атрибут <span className=\"token attr-name\"> align</span><span className=\"token attr-value\"><span className=\"token punctuation\">=</span><span className=\"token punctuation\">\"</span>left|stretch|right<span className=\"token punctuation\">\" </span></span>\r\n                                    для тега <span className=\"token attr-name\">am-tooltip-content</span>\r\n                                    </p>\r\n                                    <p className=\"example__description\">Не работает с <span className=\"token attr-name\"> direction</span><span className=\"token attr-value\"><span className=\"token punctuation\">=</span><span className=\"token punctuation\">\"</span>left|right<span className=\"token punctuation\">\"</span></span>\r\n                                    </p>\r\n                                    <div className=\"example__preview\" ref={this.tooltip_align}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tooltip_align}\r\n                                            readOnly={true}\r\n                                            onValueChange={tooltip_align => { this.setState({ tooltip_align }); this.tooltip_align.current.innerHTML = tooltip_align}}\r\n                                            highlight={tooltip_align => highlight(tooltip_align, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                            value={this.state.scssVariables}\r\n                                            onValueChange={scssVariables => {\r\n                                                this.setState({ scssVariables });\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Tooltip-content\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>direction</td>\r\n                                                <td>bottom</td>\r\n                                                <td>top&nbsp;| right&nbsp;| left&nbsp;| bottom&nbsp;|</td>\r\n                                                <td>Направление</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>align</td>\r\n                                                <td>center</td>\r\n                                                <td>left&nbsp;| center&nbsp;| stretch&nbsp;| right&nbsp;|</td>\r\n                                                <td>Выравнивание</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\nimport DropdownUI from '@ui/Dropdown'\r\n\r\nconst scssVariables = `\r\n// Dropdown\r\n$zIndex-dropdown: 99 !default;\r\n`;\r\n\r\nconst dropdown = `\r\n<div am-dropdown>\r\n    <div am-dropdown-header>dropdown</div>\r\n    <div am-dropdown-content>\r\n        <div am-dropdown-wrapper>\r\n            <div am-dropdown-arrow></div>\r\n            <ul>\r\n                <li>dropdown-item-1</li>\r\n                <li>dropdown-item-2</li>\r\n                <li>dropdown-item-3</li>\r\n                <li>dropdown-item-4</li>\r\n                <li>dropdown-item-5</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst dropdown_direction = `\r\n<div am-grid=\"container\" spacing=\"1\">\r\n    <div am-grid=\"item\" elg=\"3\" sm=\"12\" spacing=\"1\">\r\n        <div am-dropdown>\r\n            <div am-dropdown-header>dropdown-bottom (default)</div>\r\n            <div am-dropdown-content direction=\"bottom\">\r\n                <div am-dropdown-wrapper>\r\n                    <div am-dropdown-arrow></div>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"/frontend/components/dropdown\">/frontend/components/dropdown</a>\r\n                        </li>\r\n                        <li>dropdown-item-2</li>\r\n                        <li>dropdown-item-3</li>\r\n                        <li>dropdown-item-4</li>\r\n                        <li>dropdown-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div am-grid=\"item\" elg=\"3\" sm=\"12\" spacing=\"1\">\r\n        <div am-dropdown>\r\n            <div am-dropdown-header>dropdown-top</div>\r\n            <div am-dropdown-content direction=\"top\">\r\n                <div am-dropdown-wrapper>\r\n                    <div am-dropdown-arrow></div>\r\n                    <ul>\r\n                        <li>dropdown-item-1</li>\r\n                        <li>dropdown-item-2</li>\r\n                        <li>dropdown-item-3</li>\r\n                        <li>dropdown-item-4</li>\r\n                        <li>dropdown-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst dropdown_align = `\r\n<div am-grid=\"container\" spacing=\"1\">\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-dropdown>\r\n            <div am-dropdown-header>dropdown align-left</div>\r\n            <div am-dropdown-content align=\"left\">\r\n                <div am-dropdown-wrapper>\r\n                    <div am-dropdown-arrow align=\"left\"></div>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"/uikit/components/dropdown\">/uikit/components/dropdown</a>\r\n                        </li>\r\n                        <li>dropdown-item-2</li>\r\n                        <li>dropdown-item-3</li>\r\n                        <li>dropdown-item-4</li>\r\n                        <li>dropdown-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-dropdown>\r\n            <div am-dropdown-header>dropdown align-stretch</div>\r\n            <div am-dropdown-content align=\"stretch\">\r\n                <div am-dropdown-wrapper>\r\n                    <div am-dropdown-arrow align=\"center\"></div>\r\n                    <ul>\r\n                        <li>dropdown-item-1</li>\r\n                        <li>dropdown-item-2</li>\r\n                        <li>dropdown-item-3</li>\r\n                        <li>dropdown-item-4</li>\r\n                        <li>dropdown-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-dropdown>\r\n            <div am-dropdown-header>dropdown align-right</div>\r\n            <div am-dropdown-content align=\"right\">\r\n                <div am-dropdown-wrapper>\r\n                    <div am-dropdown-arrow align=\"right\"></div>\r\n                    <ul>\r\n                        <li>dropdown-item-1</li>\r\n                        <li>dropdown-item-2</li>\r\n                        <li>dropdown-item-3</li>\r\n                        <li>dropdown-item-4</li>\r\n                        <li>dropdown-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-dropdown>\r\n            <div am-dropdown-header>dropdown align-right</div>\r\n            <div am-dropdown-content align=\"left\" direction=\"top\">\r\n                <div am-dropdown-wrapper>\r\n                    <div am-dropdown-arrow align=\"left\"></div>\r\n                    <ul>\r\n                        <li>dropdown-item-1</li>\r\n                        <li>dropdown-item-2</li>\r\n                        <li>dropdown-item-3</li>\r\n                        <li>dropdown-item-4</li>\r\n                        <li>dropdown-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-dropdown>\r\n            <div am-dropdown-header>dropdown align-right</div>\r\n            <div am-dropdown-content align=\"stretch\" direction=\"top\">\r\n                <div am-dropdown-wrapper>\r\n                    <div am-dropdown-arrow align=\"center\"></div>\r\n                    <ul>\r\n                        <li>dropdown-item-1</li>\r\n                        <li>dropdown-item-2</li>\r\n                        <li>dropdown-item-3</li>\r\n                        <li>dropdown-item-4</li>\r\n                        <li>dropdown-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-grid=\"item\" elg=\"4\" sm=\"12\" spacing=\"1\">\r\n        <div am-dropdown>\r\n            <div am-dropdown-header>dropdown align-right</div>\r\n            <div am-dropdown-content align=\"right\" direction=\"top\">\r\n                <div am-dropdown-wrapper>\r\n                    <div am-dropdown-arrow align=\"right\"></div>\r\n                    <ul>\r\n                        <li>dropdown-item-1</li>\r\n                        <li>dropdown-item-2</li>\r\n                        <li>dropdown-item-3</li>\r\n                        <li>dropdown-item-4</li>\r\n                        <li>dropdown-item-5</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nexport class Dropdown extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dropdown,\r\n            dropdown_direction,\r\n            dropdown_align,\r\n            scssVariables\r\n        }\r\n\r\n        this.dropdown = React.createRef()\r\n        this.dropdown_direction = React.createRef()\r\n        this.dropdown_align = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        DropdownUI.bubbleInit()\r\n\r\n        this.dropdown.current.innerHTML = this.state.dropdown;\r\n        this.dropdown_direction.current.innerHTML = this.state.dropdown_direction;\r\n        this.dropdown_align.current.innerHTML = this.state.dropdown_align;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Dropdown' }\r\n                    headerText={ 'Компонент выпадающего списка.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import Dropdown from '@ui/Dropdown'\" />  \r\n                    </div>   \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-dropdown.scss'\" />  \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-dropdown.scss';\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content className=\"dropdown\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.dropdown}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.dropdown}\r\n                                            readOnly={true}\r\n                                            onValueChange={dropdown => { this.setState({ dropdown }); this.dropdown.current.innerHTML = dropdown}}\r\n                                            highlight={dropdown => highlight(dropdown, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Направление списка</h2>\r\n                                    <p className=\"example__description\">Для чтобы изменить направление, используется атрибут <span className=\"token attr-name\"> direction</span><span className=\"token attr-value\"><span className=\"token punctuation\">=</span><span className=\"token punctuation\">\"</span>bottom|top<span className=\"token punctuation\">\" </span></span>\r\n                                    для тега <span className=\"token attr-name\">am-dropdown-content</span>\r\n                                    </p>\r\n                                    <div className=\"example__preview\" ref={this.dropdown_direction}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.dropdown_direction}\r\n                                            readOnly={true}\r\n                                            onValueChange={dropdown_direction => { this.setState({ dropdown_direction }); this.dropdown_direction.current.innerHTML = dropdown_direction}}\r\n                                            highlight={dropdown_direction => highlight(dropdown_direction, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Выравнивание списка</h2>\r\n                                    <p className=\"example__description\">Для чтобы изменить выравнивание, используется атрибут <span className=\"token attr-name\"> align</span><span className=\"token attr-value\"><span className=\"token punctuation\">=</span><span className=\"token punctuation\">\"</span>left|stretch|right<span className=\"token punctuation\">\" </span></span>\r\n                                    для тега <span className=\"token attr-name\">am-dropdown-content</span>\r\n                                    </p>\r\n                                    <div className=\"example__preview\" ref={this.dropdown_align}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.dropdown_align}\r\n                                            readOnly={true}\r\n                                            onValueChange={dropdown_align => { this.setState({ dropdown_align }); this.dropdown_align.current.innerHTML = dropdown_align}}\r\n                                            highlight={dropdown_align => highlight(dropdown_align, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                            value={this.state.scssVariables}\r\n                                            onValueChange={scssVariables => {\r\n                                                this.setState({ scssVariables });\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           dropdown-content\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>direction</td>\r\n                                                <td>bottom</td>\r\n                                                <td>top&nbsp;| bottom&nbsp;|</td>\r\n                                                <td>Направление</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>align</td>\r\n                                                <td>center</td>\r\n                                                <td>left&nbsp;| center&nbsp;| stretch&nbsp;| right&nbsp;|</td>\r\n                                                <td>Выравнивание</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n\r\nimport ModalUI from '@ui/Modal'\r\nimport Utils from '@utils'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\n\r\nconst modal_bubble = `\r\n<div am-modal-overlay>\r\n    <div am-modal=\"modal_bubble\">\r\n        <div am-modal-close></div>\r\n        <div am-modal-content>\r\n            modal_bubble-content\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst modal_bubble_adaptive = `\r\n<div am-modal-overlay>\r\n    <div am-modal=\"modal_bubble_adaptive\" adaptive>\r\n        <div am-modal-close></div>\r\n        <div am-modal-content>\r\n            modal-content\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst modal_controller = `\r\nconst title = Utils.element.create('div', {'am-modal-title': ''}, [], 'render_modal-title');\r\nconst input = Utils.element.create('div', {'am-input': ''}, [\r\n    Utils.element.create('input', {'type': 'text', 'value': ''}, [])\r\n]);\r\nconst btn = Utils.element.create('div', {'am-button': 'main'}, [], 'render_modal-button');\r\n\r\nconst modal = new ModalUI({\r\n    wrapper: document.querySelector('[am-container=\"content\"]'),\r\n    content: [\r\n        title,\r\n        input,\r\n        btn\r\n    ],\r\n    options: {\r\n        adaptive: true,\r\n        mobile: false,\r\n        modalTag: {\r\n            'class': 'modal'\r\n        },\r\n        modalCloseTag: {\r\n            'class': 'modal_close'\r\n        },\r\n        modalContentTag: {\r\n            'class': 'modal_content'\r\n        }\r\n    }\r\n})\r\n\r\nbtn.addEventListener('click', (e) => {\r\n    modal.destroy(e, true)\r\n})\r\n`;\r\n\r\nconst modal_controller_mobile = `\r\nconst back = Utils.element.create('span', {}, [], 'Назад');\r\n\r\nconst modal = new ModalUI({\r\n    wrapper: document.querySelector('[am-container=\"content\"]'),\r\n    content: [\r\n        title,\r\n        input,\r\n        btn\r\n    ],\r\n    modalClose: [back],\r\n    options: {\r\n        mobile: true\r\n    }\r\n})\r\n\r\nbtn.addEventListener('click', (e) => {\r\n    modal.destroy(e, true)\r\n})\r\n`;\r\n\r\n// const scssVariables = `\r\n// // Colors\r\n// $color-main: #ff0000;\r\n// $color-main-dark: #D9000D;\r\n// $color-main-gray: #A3A2A1;\r\n// `;\r\n\r\nexport class Modal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            modal_bubble,\r\n            modal_bubble_adaptive,\r\n            modal_controller,\r\n            modal_controller_mobile,\r\n\r\n            ModalUI: false,\r\n            ModalUIMobile: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ModalUI.bubbleInit()\r\n        this.modalBuild()\r\n        this.modalBuildMobile()\r\n        // this.modal.current.innerHTML = this.state.modal;\r\n    }\r\n\r\n    modalBuild() {\r\n        const title = Utils.element.create('div', {'am-modal-title': ''}, [], 'render_modal-title');\r\n        const input = Utils.element.create('div', {'am-input': ''}, [\r\n            Utils.element.create('input', {'type': 'text', 'value': ''}, [])\r\n        ]);\r\n        const btn = Utils.element.create('div', {'am-button': 'main'}, [], 'render_modal-button');\r\n\r\n        const modal = new ModalUI({\r\n            wrapper: document.querySelector('[am-container=\"content\"]'),\r\n            children: [\r\n                title,\r\n                input,\r\n                btn\r\n            ],\r\n            options: {\r\n                adaptive: true,\r\n                mobile: false,\r\n                modalName: 'render_modal',\r\n                modalTag: {\r\n                    'class': 'modal'\r\n                },\r\n                modalCloseTag: {\r\n                    'class': 'modal_close'\r\n                },\r\n                modalContentTag: {\r\n                    'class': 'modal_content'\r\n                }\r\n            }\r\n        })\r\n\r\n        btn.addEventListener('click', (e) => {\r\n            modal.destroy(e, true)\r\n        })\r\n\r\n        this.setState({\r\n            ModalUI: modal\r\n        })\r\n    }\r\n\r\n    modalBuildMobile() {\r\n        const title = Utils.element.create('div', {'am-modal-title': ''}, [], 'render_modal_mobile-title');\r\n        const input = Utils.element.create('div', {'am-input': ''}, [\r\n            Utils.element.create('input', {'type': 'text', 'value': ''}, [])\r\n        ]);\r\n        const btn = Utils.element.create('div', {'am-button': 'main'}, [], 'render_modal_mobile-button');\r\n        const back = Utils.element.create('span', {}, [], 'Назад');\r\n\r\n        const modal = new ModalUI({\r\n            wrapper: document.querySelector('[am-container=\"content\"]'),\r\n            children: [\r\n                title,\r\n                input,\r\n                btn\r\n            ],\r\n            modalClose: [back],\r\n            options: {\r\n                mobile: true\r\n            }\r\n        })\r\n\r\n        btn.addEventListener('click', (e) => {\r\n            modal.destroy(e, true)\r\n        })\r\n\r\n        this.setState({\r\n            ModalUIMobile: modal\r\n        })\r\n    }\r\n\r\n    renderModal(e) {\r\n        this.state.ModalUI.render()\r\n    }\r\n    renderModalMobile(e) {\r\n        this.state.ModalUIMobile.render()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Modal' }\r\n                    headerText={ 'Компонент модального окна.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import Select from '@ui/Modal'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-modal.scss'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-modal.scss';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"modal\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Модальное окно в шаблоне</h2>\r\n                                    <p className=\"example__about\">Для вызова на action блок добавить атрибут <span className=\"token attr-name\">am-modal-target</span> со значением модального окна.\r\n                                    <br/>\r\n                                    Перед этим необходимо инициилизировать Modal.bubbleInit()</p>\r\n                                    <div className=\"example__preview\"\r\n                                    >\r\n                                        <button am-button={''} am-modal-target=\"modal_bubble\">Обычная модалка (bubble)</button>\r\n                                    </div>\r\n                                    <div am-modal-overlay={''}>\r\n                                        <div am-modal=\"modal_bubble\">\r\n                                            <div am-modal-close={''}></div>\r\n                                            <div am-modal-content={''}>\r\n                                                <div am-modal-title=\"\">modal_bubble-title</div>\r\n                                                <div am-input=\"\"><input type=\"text\"/></div>\r\n                                                <div am-button=\"main\">modal_bubble-button</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.modal_bubble}\r\n                                            readOnly={true}\r\n                                            onValueChange={modal_bubble => { this.setState({ modal_bubble }) }}\r\n                                            highlight={modal_bubble => highlight(modal_bubble, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Адаптивное окно в шаблоне</h2>\r\n                                    <p className=\"example__about\">Атрибут <span className=\"token attr-name\">adaptive</span> для <span className=\"token attr-name\">am-modal</span></p>\r\n                                    <div className=\"example__preview\"\r\n                                    >\r\n                                        <button am-button={''} am-modal-target=\"modal_bubble_adaptive\">Обычная модалка (adaptive)</button>\r\n                                        {/* <button am-button={''} onClick={this.renderModal.bind(this)}>Обычная render модалка</button>\r\n                                        <button am-button={''} onClick={this.renderModalMobile.bind(this)}>Обычная render(mobile) модалка</button> */}\r\n                                    </div>\r\n                                    <div am-modal-overlay={''}>\r\n                                        <div am-modal=\"modal_bubble_adaptive\" adaptive={''}>\r\n                                            <div am-modal-close={''}></div>\r\n                                            <div am-modal-content={''}>\r\n                                                <div am-modal-title=\"\">modal_bubble_adaptive-title</div>\r\n                                                <div am-input=\"\"><input type=\"text\"/></div>\r\n                                                <div am-button=\"main\">modal_bubble_adaptive-button</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.modal_bubble_adaptive}\r\n                                            readOnly={true}\r\n                                            onValueChange={modal_bubble_adaptive => { this.setState({ modal_bubble_adaptive }) }}\r\n                                            highlight={modal_bubble_adaptive => highlight(modal_bubble_adaptive, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Создание модалки</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <button am-button={''} onClick={this.renderModal.bind(this)}>Обычная модалка (render)</button>\r\n                                        {/* <button am-button={''} onClick={this.renderModalMobile.bind(this)}>Обычная render(mobile) модалка</button> */}\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.modal_controller}\r\n                                            readOnly={true}\r\n                                            onValueChange={modal_controller => { this.setState({ modal_controller }) }}\r\n                                            highlight={modal_controller => highlight(modal_controller, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Модалка как static блок</h2>\r\n                                    <p className=\"example__about\">После рендера скрываются все дочерние блоки wrapper</p>\r\n                                    <div className=\"example__preview\"\r\n                                    >\r\n                                        <button am-button={''} onClick={this.renderModalMobile.bind(this)}>Обычная модалка (mobile)</button>\r\n                                        {/* <button am-button={''} onClick={this.renderModalMobile.bind(this)}>Обычная render(mobile) модалка</button> */}\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.modal_controller_mobile}\r\n                                            readOnly={true}\r\n                                            onValueChange={modal_controller_mobile => { this.setState({ modal_controller_mobile }) }}\r\n                                            highlight={modal_controller_mobile => highlight(modal_controller_mobile, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Свойства\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    wrapper\r\n                                                </td>\r\n                                                <td>body</td>\r\n                                                <td>HTMLElement</td>\r\n                                                <td>HTML элемент, куда будет размещена модалка</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    modalClose\r\n                                                </td>\r\n                                                <td>false</td>\r\n                                                <td>array</td>\r\n                                                <td>Контент кнопки закрытия</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    children\r\n                                                </td>\r\n                                                <td>false</td>\r\n                                                <td>array</td>\r\n                                                <td>Контент модаллки модалки</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    options\r\n                                                </td>\r\n                                                <td>\r\n                                                    adaptive,<br/>\r\n                                                    mobile,<br/>\r\n                                                    modalName,<br/>\r\n                                                    modalTag,<br/>\r\n                                                    modalCloseTag,<br/>\r\n                                                    modalContentTag\r\n                                                </td>\r\n                                                <td>object</td>\r\n                                                <td>Параметры модалки</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    options.adaptive\r\n                                                </td>\r\n                                                <td>true</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Адаптивная модалка</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    options.mobile\r\n                                                </td>\r\n                                                <td>true</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Модалка в виде обычного static блока</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    options.modalName\r\n                                                </td>\r\n                                                <td>true</td>\r\n                                                <td>string</td>\r\n                                                <td>Название модалки (am-modal-overlay=\"modalName\",<br/> am-modal=\"modalName\")</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    options.modalTag\r\n                                                </td>\r\n                                                <td>{\"{ tagName: tagValue, ... }\"}</td>\r\n                                                <td>object</td>\r\n                                                <td>Теги am-modal</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    options.modalCloseTag\r\n                                                </td>\r\n                                                <td>{\"{ tagName: tagValue, ... }\"}</td>\r\n                                                <td>object</td>\r\n                                                <td>Теги am-modal-close</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    options.modalContentTag\r\n                                                </td>\r\n                                                <td>{\"{ tagName: tagValue, ... }\"}</td>\r\n                                                <td>object</td>\r\n                                                <td>Теги am-modal-content</td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                                <td>\r\n                                                    build\r\n                                                </td>\r\n                                                <td>false</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Контроль создания модалки</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    render\r\n                                                </td>\r\n                                                <td>false</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Контроль рендера модалки</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    onRender\r\n                                                </td>\r\n                                                <td>() => {\"{ }\"}</td>\r\n                                                <td>function</td>\r\n                                                <td>Метод, вызывающийся после открытия модалки</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    onDestroy\r\n                                                </td>\r\n                                                <td>() => {\"{ }\"}</td>\r\n                                                <td>function</td>\r\n                                                <td>Метод, вызывающийся после закрытия модалки</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Методы\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    render\r\n                                                </td>\r\n                                                <td>() => {\"{ }\"}</td>\r\n                                                <td>function</td>\r\n                                                <td>Метод открытия модалки</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    destroy\r\n                                                </td>\r\n                                                <td>\r\n                                                    (e, false) => {\"{ }\"}<br/>\r\n                                                </td>\r\n                                                <td>function</td>\r\n                                                <td>Метод закрытия модалки</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './Form.scss';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n// import utils from '@utils';\r\nimport SelectUI from '@ui/Select';\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\n\r\nconst form_field = `\r\n<form am-form=\"news\">\r\n    <div am-form-field width=\"100\">\r\n        <div am-input=\"fio\">\r\n            <div am-hint=\"top\">Фамилия</div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"fio\" type=\"text\" placeholder=\"Фамилия\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div am-input=\"name\">\r\n            <div am-hint=\"top\">Имя <span am-required=\"\">*</span></div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"name\" type=\"text\" placeholder=\"Имя\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div am-input=\"patronymic\">\r\n            <div am-hint=\"top\">Отчество</div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"patronymic\" type=\"text\" placeholder=\"Отчество\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-form-field width=\"auto\">\r\n        <div am-input=\"phone\">\r\n            <div am-hint=\"top\">Телефон <span am-required=\"\">*</span></div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"phone\" placeholder=\"+7 (900) 000-0000\" type=\"text\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div am-input=\"email\">\r\n            <div am-hint=\"top\">Email</div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"email\" type=\"text\" placeholder=\"\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-form-field width=\"auto\">\r\n        <div am-select am-input=\"city\">\r\n            <input am-select-input type=\"hidden\" name=\"city\" value=\"0\">\r\n            <div am-select-value=\"\">Ваш город</div>\r\n            <div am-select-wrapper>\r\n                <div am-select-options>\r\n                    <div am-select-option=\"0\">Все города</div>\r\n                    <div am-select-option=\"1\">Москва</div>\r\n                    <div am-select-option=\"2\">Самара</div>\r\n                    <div am-select-option=\"3\">Тольятти</div>\r\n                    <div am-select-option=\"4\">Казань</div>\r\n                    <div am-select-option=\"5\">Сызрань</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-form-field>\r\n        <div am-checkbox>\r\n            <input am-checkbox-input name=\"subscribe\" type=\"checkbox\">\r\n            <div am-checkbox-wrapper>\r\n                <div am-checkbox-icon></div>\r\n                <div am-checkbox-label>Подписать на новости</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-form-field>\r\n        <button am-button=\"main\" type=\"submit\">Подписаться</button>\r\n    </div>\r\n</form>\r\n`;\r\n\r\nexport class Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            form_field,\r\n        }\r\n\r\n        this.form_field = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.form_field.current.innerHTML = this.state.form_field;\r\n\r\n        new SelectUI(this.form_field.current.querySelector('[am-select]'), {\r\n            placeholder: 'Выберите город',\r\n            placeholderOption: 'Список пуст'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Form' }\r\n                    headerText={ 'Компонент формы (am-form-field).' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-form.scss';\" />  \r\n                    </div>        \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-form.scss'\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content className=\"form\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <div className=\"example__preview\" ref={this.form_field}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.form_field}\r\n                                            readOnly={true}\r\n                                            onValueChange={form_field => { this.setState({ form_field }); this.form_field.current.innerHTML = form_field }}\r\n                                            highlight={form_field => highlight(form_field, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './Toggle.scss';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst toggle = `\r\n<div am-toggle>\r\n    <input am-toggle-input name=\"sale\" type=\"checkbox\">\r\n    <div am-toggle-wrapper>\r\n        <div am-toggle-track></div>\r\n    </div>\r\n    <div am-toggle-label>Товары со скидкой</div>\r\n</div>\r\n\r\n<div am-toggle>\r\n    <div am-toggle-label>Товары со скидкой</div>\r\n    <input am-toggle-input name=\"sale\" type=\"checkbox\">\r\n    <div am-toggle-wrapper>\r\n        <div am-toggle-track></div>\r\n    </div>\r\n</div>\r\n\r\n<div am-toggle>\r\n    <input am-toggle-input name=\"sale\" type=\"checkbox\">\r\n    <div am-toggle-wrapper>\r\n        <div am-toggle-track></div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst toggle_disabled = `\r\n<div am-toggle>\r\n    <input am-toggle-input name=\"sale\" type=\"checkbox\" disabled>\r\n    <div am-toggle-wrapper>\r\n        <div am-toggle-track></div>\r\n    </div>\r\n    <div am-toggle-label>Товары со скидкой</div>\r\n</div>\r\n\r\n<div am-toggle disabled>\r\n    <div am-toggle-label>Товары со скидкой</div>\r\n    <input am-toggle-input name=\"sale\" type=\"checkbox\" disabled>\r\n    <div am-toggle-wrapper>\r\n        <div am-toggle-track></div>\r\n    </div>\r\n</div>\r\n\r\n<div am-toggle>\r\n    <input am-toggle-input name=\"sale\" type=\"checkbox\" disabled>\r\n    <div am-toggle-wrapper>\r\n        <div am-toggle-track></div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst scssVariables = `\r\n// Colors\r\n$color-main-blue-dark: #091F7C !default;\r\n$color-main-blue-blur: #475077 !default;\r\n`;\r\n\r\nexport class Toggle extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            toggle,\r\n            toggle_disabled,\r\n            scssVariables\r\n        }\r\n\r\n        this.toggle = React.createRef()\r\n        this.toggle_disabled = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.toggle.current.innerHTML = this.state.toggle;\r\n        this.toggle_disabled.current.innerHTML = this.state.toggle_disabled;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Toggle' }\r\n                    headerText={ 'Компонент переключателя.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-toggle.scss';\" />  \r\n                    </div>        \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-toggle.scss'\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"toggle\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.toggle}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.toggle}\r\n                                            readOnly={true}\r\n                                            onValueChange={toggle => { this.setState({ toggle }); this.toggle.current.innerHTML = toggle}}\r\n                                            highlight={toggle => highlight(toggle, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Заблокированный</h2>\r\n                                    <div className=\"example__preview\" ref={this.toggle_disabled}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.toggle_disabled}\r\n                                            readOnly={true}\r\n                                            onValueChange={toggle_disabled => { this.setState({ toggle_disabled }); this.toggle_disabled.current.innerHTML = toggle_disabled}}\r\n                                            highlight={toggle_disabled => highlight(toggle_disabled, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                            value={this.state.scssVariables}\r\n                                            onValueChange={scssVariables => {\r\n                                                this.setState({ scssVariables });\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                </div> \r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './Select.scss';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport utils from '@utils';\r\nimport SelectUI from '@ui/Select';\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst select_default = `\r\n<div am-input>\r\n    <select name=\"city\">\r\n        <option value=\"0\" selected>Все города</option>\r\n        <option value=\"1\">Москва</option>\r\n        <option value=\"2\">Самара</option>\r\n        <option value=\"3\">Тольятти</option>\r\n    </select>\r\n</div>\r\n`;\r\n\r\nconst select = `\r\nconst select = utils.element.createTemplate(\r\n    <div am-select>\r\n        <input am-select-input type=\"hidden\" name=\"city\" value=\"0\">\r\n        <div am-select-value=\"\">Выберите город</div>\r\n        <div am-select-wrapper>\r\n            <div am-select-options>\r\n                <div am-select-option=\"0\">Все города</div>\r\n                <div am-select-option=\"1\">Москва</div>\r\n                <div am-select-option=\"2\">Самара</div>\r\n                <div am-select-option=\"3\">Тольятти</div>\r\n                <div am-select-option=\"4\">Казань</div>\r\n                <div am-select-option=\"5\">Сызрань</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\ndiv.appendChild(select);\r\n\r\nconst customSelect = new SelectUI(select, {\r\n    name: 'selectCreate',\r\n    options: [\r\n        {value: 0, label: 'Все города'},\r\n        {value: 1, label: 'Москва'},\r\n        {value: 2, label: 'Самара'},\r\n        {value: 3, label: 'Тольятти'},\r\n        {value: 4, label: 'Казань'},\r\n        {value: 5, label: 'Сызрань'},\r\n    ],\r\n    placeholder: 'Выберите город',\r\n    placeholderOption: 'Список пуст'\r\n});\r\n\r\ncustomSelect.on('change', data => {\r\n    console.log(data);\r\n})\r\n`;\r\n\r\nconst select_custom = `\r\nconst customSelect = new Select({\r\n    name: 'selectBuild',\r\n    options: [\r\n        {value: 0, label: 'Все города 1'},\r\n        {value: 1, label: 'Москва 2'},\r\n        {value: 2, label: 'Самара 3'},\r\n        {value: 3, label: 'Тольятти 4'},\r\n        {value: 4, label: 'Казань 5'},\r\n        {value: 5, label: 'Сызрань 6'},\r\n    ],\r\n    placeholder: 'Выберите город',\r\n    placeholderOption: 'Список пуст',\r\n    onChange: (option) => {\r\n        this.setState({\r\n            selectValue: option\r\n        })\r\n    }\r\n});\r\n\r\nconst select = customSelect.build();\r\n`;\r\n\r\nconst scssVariables = `\r\n// Colors\r\n$color-gray: #F5F5F5 !default;\r\n$color-gray-light: #F7F7F7 !default;\r\n$zIndex-select: 99 !default;\r\n`;\r\n\r\nexport class Select extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            select_default,\r\n            select,\r\n            select_custom,\r\n            selectValue: null,\r\n\r\n            selectBuild: null,\r\n            SelectUI: null,\r\n\r\n            scssVariables\r\n        }\r\n\r\n        this.select_default = React.createRef()\r\n        this.select = React.createRef()\r\n        this.selectNative = React.createRef()\r\n        this.select_custom = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.select_default.current.innerHTML = this.state.select_default;\r\n        // this.select.current.innerHTML = this.state.select;\r\n\r\n        this.selectBuild()\r\n\r\n    }\r\n\r\n    selectBuild() {\r\n        const select = utils.element.createTemplate(`\r\n            <div am-select>\r\n                <input am-select-input type=\"hidden\" name=\"city\" value=\"0\">\r\n                <div am-select-value=\"\">Выберите город</div>\r\n                <div am-select-wrapper>\r\n                    <div am-select-options>\r\n                        <div am-select-option=\"0\">Все города</div>\r\n                        <div am-select-option=\"1\">Москва</div>\r\n                        <div am-select-option=\"2\">Самара</div>\r\n                        <div am-select-option=\"3\">Тольятти</div>\r\n                        <div am-select-option=\"4\">Казань</div>\r\n                        <div am-select-option=\"5\">Сызрань</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `)\r\n\r\n        this.select.current.appendChild(select);\r\n\r\n        const customSelect = new SelectUI(select, {\r\n            name: 'selectCreate',\r\n            options: [\r\n                {value: 0, label: 'Все города 1'},\r\n                {value: 1, label: 'Москва 2'},\r\n                {value: 2, label: 'Самара 3'},\r\n                {value: 3, label: 'Тольятти 4'},\r\n                {value: 4, label: 'Казань 5'},\r\n                {value: 5, label: 'Сызрань 6'},\r\n            ],\r\n            placeholder: 'Выберите город',\r\n            placeholderOption: 'Список пуст'\r\n        });\r\n\r\n        customSelect.on('change', data => {\r\n            console.log(data);\r\n        })\r\n\r\n        // const customSelect1 = new SelectUI({\r\n        //     name: 'selectBuild',\r\n        //     options: [\r\n        //     ],\r\n        //     placeholder: 'Выберите город',\r\n        //     placeholderOption: 'Список пуст',\r\n        //     onChange: (option) => {\r\n        //         this.setState({\r\n        //             selectValue: option\r\n        //         })\r\n        //     }\r\n        // });\r\n\r\n        // const customSelect2 = new SelectUI({\r\n        //     name: 'selectBuild',\r\n        //     options: [\r\n        //     ],\r\n        //     placeholder: 'Выберите город',\r\n        //     // placeholderOption: 'Список пуст',\r\n        //     onChange: (option) => {\r\n        //         this.setState({\r\n        //             selectValue: option\r\n        //         })\r\n        //     }\r\n        // });\r\n\r\n        // const customSelect3 = new SelectUI({\r\n        //     name: 'selectBuild',\r\n        //     options: [\r\n        //         {value: 0, label: 'Все города'},\r\n        //         {value: 1, label: 'Москва'},\r\n        //         {value: 2, label: 'Самара'},\r\n        //         {value: 3, label: 'Тольятти'},\r\n        //         {value: 4, label: 'Казань'},\r\n        //         {value: 5, label: 'Сызрань'},\r\n        //     ],\r\n        //     placeholder: 'Выберите город',\r\n        //     placeholderOption: 'Список пуст',\r\n        //     onChange: (option) => {\r\n        //         this.setState({\r\n        //             selectValue: option\r\n        //         })\r\n        //     }\r\n        // });\r\n\r\n        // this.selectNative.current.appendChild(customSelect.build())\r\n        // this.selectNative.current.appendChild(customSelect3.build())\r\n        // this.selectNative.current.appendChild(customSelect1.build())\r\n        // this.selectNative.current.appendChild(customSelect2.build())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Select' }\r\n                    headerText={ 'Компонент выпадающего списка с опциями.' }\r\n                >        \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import Select from '@ui/Select'\" />  \r\n                    </div>   \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-select.scss'\" />  \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-select.scss';\" />  \r\n                    </div>     \r\n                </Header>\r\n                <Content className=\"dropdown\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный в шаблоне</h2>\r\n                                    <div className=\"example__preview\" ref={this.select_default}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.select_default}\r\n                                            readOnly={true}\r\n                                            onValueChange={select_default => { this.setState({ select_default }); this.select_default.current.innerHTML = select_default}}\r\n                                            highlight={select_default => highlight(select_default, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Создание селекта</h2>\r\n                                    <div className=\"example__preview\" ref={this.select}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.select}\r\n                                            readOnly={true}\r\n                                            onValueChange={select => { this.setState({ select }); this.select.current.innerHTML = select}}\r\n                                            highlight={select => highlight(select, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Создание селекта</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <div ref={this.selectNative}></div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.select_custom}\r\n                                            readOnly={true}\r\n                                            onValueChange={select_custom => { this.setState({ select_custom })}}\r\n                                            highlight={select_custom => highlight(select_custom, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div> */}\r\n                                <h2 className=\"example__header\">scss переменные.</h2>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                            value={this.state.scssVariables}\r\n                                            onValueChange={scssVariables => {\r\n                                                this.setState({ scssVariables });\r\n                                            }}\r\n                                            readOnly={true}\r\n                                            highlight={scssVariables => highlight(scssVariables, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Свойства\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    name\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>string</td>\r\n                                                <td>Наименование (am-select=\"name\"...input[name])</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    options\r\n                                                </td>\r\n                                                <td>[{\"{ value, label }\"}]</td>\r\n                                                <td>array</td>\r\n                                                <td>Массив опций</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    value\r\n                                                </td>\r\n                                                <td>[{\"{ value, label }\"}]</td>\r\n                                                <td>object</td>\r\n                                                <td>Текущее значение</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                placeholder\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>string</td>\r\n                                                <td>Если placeholder не передан, то в input подставляется первая опция</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                placeholderOption\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>string</td>\r\n                                                <td>В случае когда нету опций, будет показываться лейбл</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                selectTags<br/>\r\n                                                valueTags<br/>\r\n                                                optionsTags<br/>\r\n                                                optionTags<br/>\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>object {\"{ tagName: tagValue, ... }\"}</td>\r\n                                                <td>Теги элементов</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                on(render|destroy|change, cb)\r\n                                                </td>\r\n                                                <td>cb(data) => {\"{ }\"}</td>\r\n                                                <td>function</td>\r\n                                                <td>Методы жизненого цикла</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Методы\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    render\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Метод открытия</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    destroy\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Метод закрытия</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    change\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Метод закрытия</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport ProgressUI from '@ui/Progress';\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\n\r\nlet newVal = 0;\r\n\r\nconst progress = `\r\n<div am-progress data-percent=\"50\">\r\n    <span am-progress-percent>50%</span>\r\n    <div am-progress-bar style=\"width:50%;\"></div>\r\n</div>\r\n`;\r\nconst progressCreate = `\r\nconst progress = new Progress({\r\n    name: 'progress',\r\n    percent: 25,\r\n    progressTag: {\r\n        tag1: 'value1',\r\n        tag2: 'value2',\r\n    }\r\n});\r\n`;\r\nconst progressCreateRing = `\r\nconst ring = new Progress({\r\n    name: 'ring',\r\n    type: 'ring',\r\n    percent: 75,\r\n    ringRadius: 30,\r\n    ringColor: 'red',\r\n})\r\n`;\r\n\r\nexport class Progress extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            progress,\r\n            progressCreate,\r\n            progressCreateRing,\r\n\r\n            ProgressUI: null,\r\n            ProgressUI1: null,\r\n\r\n            ring: null,\r\n            ring1: null\r\n        }\r\n\r\n        this.progress = React.createRef()\r\n        this.newProgress = React.createRef()\r\n        this.appendProgress = React.createRef()\r\n        this.progressCreate = React.createRef()\r\n        this.progressCreateRing = React.createRef()\r\n        this.appendRing = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.progress.current.innerHTML = this.state.progress;\r\n\r\n        const progress = new ProgressUI({\r\n            name: 'progress',\r\n            progress: this.newProgress.current,\r\n            percent: 25\r\n        });\r\n\r\n        const ProgressUI1 = new ProgressUI({\r\n            name: 'progress',\r\n            percent: 25,\r\n            progressTag: {\r\n                tag1: 'value1',\r\n                tag2: 'value2',\r\n            }\r\n        });\r\n        this.appendProgress.current.appendChild(ProgressUI1.build())\r\n\r\n        this.setState({\r\n            ProgressUI: progress,\r\n            ProgressUI1\r\n        })\r\n\r\n        this.ringBuild()\r\n    }\r\n\r\n    ringBuild = () => {\r\n        const ring = new ProgressUI({\r\n            name: 'ring',\r\n            type: 'ring',\r\n            percent: 75,\r\n            ringRadius: 25,\r\n            ringWidth: 3,\r\n        })\r\n\r\n        const ring1 = new ProgressUI({\r\n            name: 'ring1',\r\n            type: 'ring',\r\n            percent: 75,\r\n            ringRadius: 25,\r\n            ringWidth: 3,\r\n            ringColor: 'red',\r\n        })\r\n\r\n        this.setState({\r\n            ring,\r\n            ring1\r\n        })\r\n\r\n        this.appendRing.current.appendChild(ring.build())\r\n        this.appendRing.current.appendChild(ring1.build())\r\n    }\r\n\r\n    progressAdd = (val) => {\r\n        newVal = this.state.ProgressUI.getPercent() + 10;\r\n        this.state.ProgressUI.setPercent(newVal);\r\n        this.state.ProgressUI1.setPercent(newVal);\r\n    }\r\n\r\n    progressRemove = (val) => {\r\n        newVal = this.state.ProgressUI.getPercent() - 10;\r\n        this.state.ProgressUI.setPercent(newVal);\r\n        this.state.ProgressUI1.setPercent(newVal);\r\n    }\r\n\r\n    ringAdd = (val) => {\r\n        const newVal = this.state.ring.getPercent() + 10;\r\n        const newVal1 = this.state.ring1.getPercent() + 10;\r\n        this.state.ring.setPercent(newVal);\r\n        this.state.ring1.setPercent(newVal1);\r\n    }\r\n\r\n    ringRemove = (val) => {\r\n        const newVal = this.state.ring.getPercent() - 10;\r\n        const newVal1 = this.state.ring1.getPercent() - 10;\r\n        this.state.ring.setPercent(newVal);\r\n        this.state.ring1.setPercent(newVal1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Progress' }\r\n                    headerText={ 'Компонент индикатора.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import Dropdown from '@ui/Progress'\" />  \r\n                    </div>   \r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-progress.scss'\" />  \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-progress.scss';\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.progress}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.progress}\r\n                                            readOnly={true}\r\n                                            onValueChange={progress => { this.setState({ progress }); this.progress.current.innerHTML = progress}}\r\n                                            highlight={progress => highlight(progress, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Создание</h2>\r\n                                    <div className=\"example__preview\" ref={this.appendProgress}></div>\r\n                                    <div style={{marginBottom: '10px'}}>\r\n                                        <button style={{padding: '5px 10px', marginRight: '10px'}} onClick={this.progressAdd.bind(this, 2)}>+</button>\r\n                                        <button style={{padding: '5px 10px'}} onClick={this.progressRemove}>-</button>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.progressCreate}\r\n                                            readOnly={true}\r\n                                            onValueChange={progressCreate => { this.setState({ progressCreate });}}\r\n                                            highlight={progressCreate => highlight(progressCreate, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Прогресс в виде кольца</h2>\r\n                                    <div className=\"example__preview\" ref={this.appendRing}></div>\r\n                                    <div style={{marginBottom: '10px'}}>\r\n                                        <button style={{padding: '5px 10px', marginRight: '10px'}} onClick={this.ringAdd.bind(this)}>+</button>\r\n                                        <button style={{padding: '5px 10px'}} onClick={this.ringRemove}>-</button>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.progressCreateRing}\r\n                                            readOnly={true}\r\n                                            onValueChange={progressCreateRing => { this.setState({ progressCreateRing });}}\r\n                                            highlight={progressCreateRing => highlight(progressCreateRing, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Свойства\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    name\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>string</td>\r\n                                                <td>Наименование (am-progress=\"name\")</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    type\r\n                                                </td>\r\n                                                <td>line</td>\r\n                                                <td>string</td>\r\n                                                <td>Тип индикатора</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    percent\r\n                                                </td>\r\n                                                <td>0</td>\r\n                                                <td>number</td>\r\n                                                <td>Процент прогресса</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    progress\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>HTMLElement</td>\r\n                                                <td>Элемент am-progress</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    progressPercent\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>HTMLElement</td>\r\n                                                <td>Элемент am-progress-percent</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    progressBar\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>HTMLElement</td>\r\n                                                <td>Элемент am-progress-bar</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                progressTag<br/>\r\n                                                progressPercentTag<br/>\r\n                                                progressBarTag\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>object {\"{ tagName: tagValue, ... }\"}</td>\r\n                                                <td>Теги HTMLElement элементов</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Ring\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                ring\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>svg</td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                ringFill\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>circle</td>\r\n                                                <td>Бэкграунд индикатора</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                ringCircle\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>circle</td>\r\n                                                <td>индикатора</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                ringWidth\r\n                                                </td>\r\n                                                <td>3</td>\r\n                                                <td>number</td>\r\n                                                <td>Ширина индикатора</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                ringRadius\r\n                                                </td>\r\n                                                <td>30</td>\r\n                                                <td>number</td>\r\n                                                <td>Радиус индикатора</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                ringFillColor\r\n                                                </td>\r\n                                                <td>#F3F1F0</td>\r\n                                                <td>rgba</td>\r\n                                                <td>Цвет бэкграунда</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                ringColor\r\n                                                </td>\r\n                                                <td>#A3A2A1</td>\r\n                                                <td>rgba</td>\r\n                                                <td>Цвет индикатора</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Методы\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    build\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Метод создания, возвращает HTMLElement</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    setPercent\r\n                                                </td>\r\n                                                <td>(value) => {\"{ }\"}</td>\r\n                                                <td>function</td>\r\n                                                <td>Устанавливает процент текущей процент</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    getPercent\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Возвращает текущей процент</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    setProgress<br/>\r\n                                                    setRing\r\n                                                </td>\r\n                                                <td>(progress) => {\"{ }\"}</td>\r\n                                                <td>function</td>\r\n                                                <td>Устанавливает progress, принимает HTMLElement</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    getProgress<br/>\r\n                                                    getRing\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Возвращает HTMLElement</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport './Spinner.scss';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx'\r\n\r\nconst spinner = `\r\n<span am-spinner=\"small\"></span>\r\n<span am-spinner></span>\r\n<span am-spinner=\"large\"></span>\r\n`;\r\n\r\nconst spinner_inverted = `\r\n<span am-spinner=\"small\" inverted></span>\r\n<span am-spinner inverted></span>\r\n<span am-spinner=\"large\" inverted></span>\r\n`;\r\n\r\nconst spinner_center = `\r\n<span am-spinner inverted center></span>\r\n`;\r\n\r\nconst spinner_button = `\r\n<button am-button=\"main\" spinner>button\r\n    <span am-spinner=\"small\" inverted></span>\r\n</button>\r\n`;\r\n\r\nconst loader = `\r\n<div am-loader=\"small\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>\r\n<div am-loader>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>\r\n<div am-loader=\"large\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>\r\n`;\r\nconst loader_center = `\r\n<div am-loader center>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>\r\n`;\r\n\r\nexport class Spinner extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            spinner,\r\n            spinner_inverted,\r\n            spinner_center,\r\n            spinner_button,\r\n            loader,\r\n            loader_center\r\n        }\r\n\r\n        this.spinner = React.createRef()\r\n        this.spinner_inverted = React.createRef()\r\n        this.spinner_center = React.createRef()\r\n        this.spinner_button = React.createRef()\r\n        this.loader = React.createRef()\r\n        this.loader_center = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.spinner.current.innerHTML = this.state.spinner;\r\n        this.spinner_inverted.current.innerHTML = this.state.spinner_inverted;\r\n        this.spinner_center.current.innerHTML = this.state.spinner_center;\r\n        this.spinner_button.current.innerHTML = this.state.spinner_button;\r\n        this.loader.current.innerHTML = this.state.loader;\r\n        this.loader_center.current.innerHTML = this.state.loader_center;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Spinner' }\r\n                    headerText={ 'Компонент загрузки.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-spinner.scss'\" />  \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-spinner.scss';\" />  \r\n                    </div>\r\n                </Header>\r\n                <Content className=\"spinner\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                {/* <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li> */}\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                {/* <p className=\"example__description\">Кнопка используется как триггер для выполнения определённого действия. Кнопка однозначно сообщает пользователю, что произойдёт после нажатия на неё.</p> */}\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.spinner} style={{\r\n                                        position: 'relative',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'space-around'\r\n                                    }}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.spinner}\r\n                                            readOnly={true}\r\n                                            onValueChange={spinner => { this.setState({ spinner }); this.spinner.current.innerHTML = spinner}}\r\n                                            highlight={spinner => highlight(spinner, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Inverted</h2>\r\n                                    <div className=\"example__preview\" ref={this.spinner_inverted} style={{\r\n                                        position: 'relative',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'space-around',\r\n                                        background: '#969696'\r\n                                    }}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.spinner_inverted}\r\n                                            readOnly={true}\r\n                                            onValueChange={spinner_inverted => { this.setState({ spinner_inverted }); this.spinner_inverted.current.innerHTML = spinner_inverted}}\r\n                                            highlight={spinner_inverted => highlight(spinner_inverted, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Центрирование</h2>\r\n                                    <div className=\"example__preview\" ref={this.spinner_center} style={{\r\n                                        position: 'relative',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'space-around',\r\n                                        background: '#969696',\r\n                                        height: '100px'\r\n                                    }}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.spinner_center}\r\n                                            readOnly={true}\r\n                                            onValueChange={spinner_center => { this.setState({ spinner_center }); this.spinner_center.current.innerHTML = spinner_center}}\r\n                                            highlight={spinner_center => highlight(spinner_center, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Кнопка</h2>\r\n                                    <div className=\"example__preview\" ref={this.spinner_button} style={{\r\n                                        position: 'relative',\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                    }}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.spinner_button}\r\n                                            readOnly={true}\r\n                                            onValueChange={spinner_button => { this.setState({ spinner_button }); this.spinner_button.current.innerHTML = spinner_button}}\r\n                                            highlight={spinner_button => highlight(spinner_button, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Загрузчик</h2>\r\n                                    <div className=\"example__preview\" ref={this.loader} style={{\r\n                                        position: 'relative',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'space-around'\r\n                                    }}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.loader}\r\n                                            readOnly={true}\r\n                                            onValueChange={loader => { this.setState({ loader }); this.loader.current.innerHTML = loader}}\r\n                                            highlight={loader => highlight(loader, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Центрирование</h2>\r\n                                    <div className=\"example__preview\" ref={this.loader_center} style={{\r\n                                        position: 'relative',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'space-around',\r\n                                        height: '200px'\r\n                                    }}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.loader_center}\r\n                                            readOnly={true}\r\n                                            onValueChange={loader_center => { this.setState({ loader_center }); this.loader_center.current.innerHTML = loader_center}}\r\n                                            highlight={loader_center => highlight(loader_center, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n\r\nimport AccordionUI from '@ui/Accordion'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\n\r\nconst accordion_default_js = `\r\nconst accordionDefault = new Accordion('[am-accordion=\"default\"]', {\r\n    init: false\r\n})\r\n\r\naccordionDefault.on('init', (tab, panel) => {\r\n    console.log('accordionDefault init', tab, panel);\r\n})\r\n\r\naccordionDefault.on('toggle', (tab, panel) => {\r\n    console.log('accordionDefault toggle', tab, panel);\r\n})\r\n\r\naccordionDefault.on('show', (tab, panel) => {\r\n    console.log('accordionDefault show', tab, panel);\r\n})\r\n\r\naccordionDefault.on('hide', (tab, panel) => {\r\n    console.log('accordionDefault hide', tab, panel);\r\n})\r\n\r\naccordionDefault.init()\r\n`;\r\n\r\nconst accordion_default_markup = `\r\n<div am-accordion=\"default\">\r\n    <div am-accordion-panel>\r\n        <div am-accordion-tab>Accordion header</div>\r\n        <div am-accordion-content>Accordion content</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst accordion_some_js = `\r\nconst accordionSome= new Accordion('[am-accordion=\"some\"]', {\r\n    duration: 200\r\n})\r\n`;\r\n\r\nconst accordion_some_markup = `\r\n<div am-accordion=\"some\">\r\n    <div am-accordion-panel>\r\n        <div am-accordion-tab>Accordion header</div>\r\n        <div am-accordion-content>Accordion content</div>\r\n    </div>\r\n    <div am-accordion-panel>\r\n        <div am-accordion-tab>Accordion header</div>\r\n        <div am-accordion-content>Accordion content</div>\r\n    </div>\r\n    <div am-accordion-panel>\r\n        <div am-accordion-tab>Accordion header</div>\r\n        <div am-accordion-content>Accordion content</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst accordion_multiple_js = `\r\nconst accordionSome= new Accordion('[am-accordion=\"multiple\"]', {\r\n    active: true,\r\n    multiple: true\r\n})\r\n`;\r\n\r\nconst accordion_multiple_markup = `\r\n<div am-accordion=\"multiple\">\r\n    <div am-accordion-panel>\r\n        <div am-accordion-tab>Accordion header</div>\r\n        <div am-accordion-content>Accordion content</div>\r\n    </div>\r\n    <div am-accordion-panel>\r\n        <div am-accordion-tab>Accordion header</div>\r\n        <div am-accordion-content>Accordion content</div>\r\n    </div>\r\n    <div am-accordion-panel>\r\n        <div am-accordion-tab>Accordion header</div>\r\n        <div am-accordion-content>Accordion content</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nexport class Accordion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            accordion_default_js,\r\n            accordion_default_markup,\r\n            accordion_some_js,\r\n            accordion_some_markup,\r\n            accordion_multiple_js,\r\n            accordion_multiple_markup,\r\n        }\r\n\r\n        this.accordionDefaultMarkup = React.createRef()\r\n        this.accordionSomeMarkup = React.createRef()\r\n        this.accordionMultipleMarkup = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.accordionDefaultMarkup.current.innerHTML = this.state.accordion_default_markup;\r\n        this.accordionSomeMarkup.current.innerHTML = this.state.accordion_some_markup;\r\n        this.accordionMultipleMarkup.current.innerHTML = this.state.accordion_multiple_markup;\r\n\r\n        this.accordionBuild()\r\n    }\r\n\r\n    accordionBuild() {\r\n        const accordionDefault = new AccordionUI(this.accordionDefaultMarkup.current.querySelector('[am-accordion=\"default\"]'), {\r\n            init: false\r\n        })\r\n\r\n        accordionDefault.on('init', (tab, panel) => {\r\n            console.log('accordionDefault init', tab, panel);\r\n        })\r\n\r\n        accordionDefault.on('toggle', (tab, panel) => {\r\n            console.log('accordionDefault toggle', tab, panel);\r\n        })\r\n\r\n        accordionDefault.on('show', (tab, panel) => {\r\n            console.log('accordionDefault show', tab, panel);\r\n        })\r\n\r\n        accordionDefault.on('hide', (tab, panel) => {\r\n            console.log('accordionDefault hide', tab, panel);\r\n        })\r\n\r\n        accordionDefault.init()\r\n\r\n        new AccordionUI(this.accordionSomeMarkup.current.querySelector('[am-accordion=\"some\"]'), {\r\n            active: true,\r\n            duration: 200\r\n        })\r\n\r\n        new AccordionUI(this.accordionMultipleMarkup.current.querySelector('[am-accordion=\"multiple\"]'), {\r\n            multiple: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Accordion' }\r\n                    headerText={ 'Компонент аккордеона.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import Accordion from '@ui/Accordion'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-Accordion.scss'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-Accordion.scss';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Accordion\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.accordionDefaultMarkup}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.accordion_default_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={accordion_default_js => { this.setState({ accordion_default_js }) }}\r\n                                            highlight={accordion_default_js => highlight(accordion_default_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.accordion_default_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={accordion_default_markup => { this.setState({ accordion_default_markup }) }}\r\n                                            highlight={accordion_default_markup => highlight(accordion_default_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Несколько</h2>\r\n                                    <div className=\"example__preview\" ref={this.accordionSomeMarkup}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.accordion_some_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={accordion_some_js => { this.setState({ accordion_some_js }) }}\r\n                                            highlight={accordion_some_js => highlight(accordion_some_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.accordion_some_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={accordion_some_markup => { this.setState({ accordion_some_markup }) }}\r\n                                            highlight={accordion_some_markup => highlight(accordion_some_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Multiple</h2>\r\n                                    <div className=\"example__preview\" ref={this.accordionMultipleMarkup}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.accordion_multiple_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={accordion_multiple_js => { this.setState({ accordion_multiple_js }) }}\r\n                                            highlight={accordion_multiple_js => highlight(accordion_multiple_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.accordion_multiple_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={accordion_multiple_markup => { this.setState({ accordion_multiple_markup }) }}\r\n                                            highlight={accordion_multiple_markup => highlight(accordion_multiple_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Свойства\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    element\r\n                                                </td>\r\n                                                <td>[am-accordion]</td>\r\n                                                <td>string || Element</td>\r\n                                                <td>HTML элемент аккордеона</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    multiple\r\n                                                </td>\r\n                                                <td>false</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Если true, то у каждой аккордеона свое состояние активности</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    active\r\n                                                </td>\r\n                                                <td>false</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Если true, то будет активен первый аккордеон</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    init\r\n                                                </td>\r\n                                                <td>true</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Если false, то аккордеон не будет проинициилизирован</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    duration\r\n                                                </td>\r\n                                                <td>\r\n                                                    300\r\n                                                </td>\r\n                                                <td>number</td>\r\n                                                <td>Время анимации открытия аккордеона в мс</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    on\r\n                                                </td>\r\n                                                <td>\r\n                                                    (tab, panel) => {\"{ }\"}<br/>\r\n                                                    init<br/>\r\n                                                    toggle<br/>\r\n                                                    show<br/>\r\n                                                    hide<br/>\r\n                                                </td>\r\n                                                <td>event</td>\r\n                                                <td>Методы жизненного цикла, возвращают tab и panel</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Методы\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    init\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Метод открытия модалки</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    toggle(tab, panel)\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Переключение</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    show(tab, panel)\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Рендер</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    hide(tab, panel)\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Скрыть</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    hideAll(currentTab)\r\n                                                </td>\r\n                                                <td></td>\r\n                                                <td>function</td>\r\n                                                <td>Скрыть все</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\nimport classes from './Tabs.module.scss'\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n\r\nimport TabsUI from '@ui/Tabs'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\n\r\nimport Swiper from 'swiper'\r\n\r\nconst tabs_default_js = `\r\nconst tabs = new Tabs('[am-tabs=\"default\"]', {\r\n    active: false,\r\n    init: true\r\n})\r\n`;\r\n\r\nconst tabs_default_markup = `\r\n<div am-tabs=\"default\" class=\"${classes.tabs}\">\r\n    <div am-tab-list=\"\">\r\n        <div am-tab=\"1\" data-tab=\"1\" class=\"${classes.tab}\">tab 1</div>\r\n        <div am-tab=\"2\" data-tab=\"2\" class=\"${classes.tab}\">tab 2</div>\r\n        <div am-tab=\"3\" data-tab=\"3\" class=\"${classes.tab}\">tab 3</div>\r\n    </div>\r\n    <div am-tab-wrapper=\"\">\r\n        <div am-tab-content=\"1\" data-content=\"1\" class=\"${classes.content}\">content 1</div>\r\n        <div am-tab-content=\"2\" data-content=\"2\" class=\"${classes.content}\">content 2</div>\r\n        <div am-tab-content=\"3\" data-content=\"3\" class=\"${classes.content}\">content 3</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst tabs_swiper_js = `\r\nconst tabs = new Tabs('[am-tabs=\"swiper\"]', {\r\n    init: true\r\n})\r\n\r\nconst tabsSlider = new Swiper('[am-tabs=\"swiper\"]', {\r\n    loop: false,\r\n    slidesPerView: 'auto',\r\n    spaceBetween: 10,\r\n});\r\n`;\r\n\r\nconst tabs_swiper_markup = `\r\n<div am-tabs=\"swiper\" class=\"${classes.tabs}\">\r\n    <div class=\"swiper-container\">\r\n        <div class=\"swiper-wrapper\">\r\n            <div am-tab-list>            \r\n                <div class=\"swiper-slide\">\r\n                    <div am-tab=\"1\" data-tab=\"1\" class=\"${classes.tab}\">tab 1</div>\r\n                </div>\r\n                <div class=\"swiper-slide\">\r\n                    <div am-tab=\"2\" data-tab=\"2\" class=\"${classes.tab}\">tab 2</div>\r\n                </div>\r\n                <div class=\"swiper-slide\">\r\n                    <div am-tab=\"3\" data-tab=\"3\" class=\"${classes.tab}\">tab 3</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div am-tab-wrapper=\"\">\r\n        <div am-tab-content=\"1\" data-content=\"1\" class=\"${classes.content}\">content 1</div>\r\n        <div am-tab-content=\"2\" data-content=\"2\" class=\"${classes.content}\">content 2</div>\r\n        <div am-tab-content=\"3\" data-content=\"3\" class=\"${classes.content}\">content 3</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst tabs_events_js = `\r\nconst tabs = new Tabs('[am-tabs=\"events\"]')\r\n\r\ntabs.on('init', (data) => {\r\n    console.log(data);\r\n})\r\n\r\ntabs.on('change', (tab, content) => {\r\n    console.log(tab, content);\r\n})\r\n\r\ntabs.init()\r\n`;\r\n\r\nconst tabs_events_markup = `\r\n<div am-tabs=\"events\" class=\"${classes.tabs}\">\r\n    <div am-tab-list=\"\">\r\n        <div am-tab=\"1\" data-tab=\"1\" class=\"${classes.tab} ${classes['version-2']}\">tab 1</div>\r\n        <div am-tab=\"2\" data-tab=\"2\" class=\"${classes.tab} ${classes['version-2']}\">tab 2</div>\r\n        <div am-tab=\"3\" data-tab=\"3\" class=\"${classes.tab} ${classes['version-2']}\">tab 3</div>\r\n    </div>\r\n    <div am-tab-wrapper=\"\">\r\n        <div am-tab-content=\"1\" data-content=\"1\" class=\"${classes.content}\">content 1</div>\r\n        <div am-tab-content=\"2\" data-content=\"2\" class=\"${classes.content}\">content 2</div>\r\n        <div am-tab-content=\"3\" data-content=\"3\" class=\"${classes.content}\">content 3</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nexport class TabsPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            tabs_default_js,\r\n            tabs_default_markup,\r\n            tabs_swiper_js,\r\n            tabs_swiper_markup,\r\n            tabs_events_js,\r\n            tabs_events_markup,\r\n        }\r\n\r\n        this.tabsDefaultMarkup = React.createRef()\r\n        this.tabsSwiperMarkup = React.createRef()\r\n        this.tabsEventsMarkup = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tabsDefaultMarkup.current.innerHTML = this.state.tabs_default_markup;\r\n        this.tabsSwiperMarkup.current.innerHTML = this.state.tabs_swiper_markup;\r\n        this.tabsEventsMarkup.current.innerHTML = this.state.tabs_events_markup;\r\n        \r\n        this.tabsBuild()\r\n    }\r\n\r\n    tabsBuild() {\r\n        const tabs = new TabsUI(this.tabsDefaultMarkup.current.querySelector('[am-tabs=\"default\"]'), {\r\n            active: true,\r\n            init: true\r\n        })\r\n\r\n        const tabs1 = new TabsUI(this.tabsSwiperMarkup.current.querySelector('[am-tabs=\"swiper\"]'), {\r\n            init: true\r\n        })\r\n        \r\n        const tabsSlider = new Swiper(this.tabsSwiperMarkup.current.querySelector('.swiper-container'), {\r\n            loop: false,\r\n            slidesPerView: 'auto',\r\n            spaceBetween: 10,\r\n        });\r\n\r\n        const tabs2 = new TabsUI(this.tabsEventsMarkup.current.querySelector('[am-tabs=\"events\"]'))\r\n        \r\n        tabs2.on('init', (data) => {\r\n            console.log(data);\r\n        })\r\n        \r\n        tabs2.on('change', (tab, content) => {\r\n            console.log(tab, content);\r\n        })\r\n\r\n        tabs2.init()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Tabs' }\r\n                    headerText={ 'Компонент аккордеона.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import Tabs from '@ui/Tabs'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-Tabs.scss'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-Tabs.scss';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.tabsDefaultMarkup}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_default_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_default_js => { this.setState({ tabs_default_js }) }}\r\n                                            highlight={tabs_default_js => highlight(tabs_default_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_default_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_default_markup => { this.setState({ tabs_default_markup }) }}\r\n                                            highlight={tabs_default_markup => highlight(tabs_default_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Events</h2>\r\n                                    <div className=\"example__preview\" ref={this.tabsEventsMarkup}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_events_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_events_js => { this.setState({ tabs_events_js }) }}\r\n                                            highlight={tabs_events_js => highlight(tabs_events_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_events_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_events_markup => { this.setState({ tabs_events_markup }) }}\r\n                                            highlight={tabs_events_markup => highlight(tabs_events_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Слайдер</h2>\r\n                                    <div className=\"example__preview\" ref={this.tabsSwiperMarkup}></div>\r\n                                    <p className=\"example__about\">Используется библиотека swiper: <a target=\"blank\" style={{color: '#1990b8'}} href=\"https://www.npmjs.com/package/swiper\">https://www.npmjs.com/package/swiper</a></p>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_swiper_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_swiper_js => { this.setState({ tabs_swiper_js }) }}\r\n                                            highlight={tabs_swiper_js => highlight(tabs_swiper_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_swiper_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_swiper_markup => { this.setState({ tabs_swiper_markup }) }}\r\n                                            highlight={tabs_swiper_markup => highlight(tabs_swiper_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Свойства\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    element\r\n                                                </td>\r\n                                                <td>[am-tabs]</td>\r\n                                                <td>string || Element</td>\r\n                                                <td>HTML элемент табов</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    active\r\n                                                </td>\r\n                                                <td>true</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Если true, то будет активен первый аккордеон</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    init\r\n                                                </td>\r\n                                                <td>false</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Если false, то аккордеон не будет проинициилизирован</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    on\r\n                                                </td>\r\n                                                <td>\r\n                                                    init (data) => {\"{ }\"}<br/>\r\n                                                    change (tab, panel) => {\"{ }\"}\r\n                                                </td>\r\n                                                <td>event</td>\r\n                                                <td>Методы жизненного цикла</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\n\r\nimport { Button, Input, Checkbox, Radio, Tooltip, Dropdown, Modal, Form, Toggle, Select, Progress, Spinner, Accordion, TabsPage} from './routeComponent.jsx'\r\n\r\nclass ComponentView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            views: {\r\n                button: <Button/>,\r\n                input: <Input/>,\r\n                checkbox: <Checkbox/>,\r\n                radio: <Radio/>,\r\n                tooltip: <Tooltip/>,\r\n                dropdown: <Dropdown/>,\r\n                modal: <Modal/>,\r\n                form: <Form/>,\r\n                toggle: <Toggle/>,\r\n                select: <Select/>,\r\n                progress: <Progress/>,\r\n                spinner: <Spinner/>,\r\n                accordion: <Accordion/>,\r\n                tabs: <TabsPage/>\r\n            },\r\n            renderView: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const view = this.state.views[this.props.match.params.name]\r\n\r\n        if (!view) {\r\n            this.props.history.push('/')\r\n        } else {\r\n            this.setState({\r\n                renderView: true\r\n            })\r\n        }\r\n    }\r\n\r\n    renderView = () => {\r\n        const name = this.props.match.params.name\r\n        const views = {...this.state.views}\r\n\r\n        for(let view in views) {\r\n            if (name === view) {\r\n                return (\r\n                    views[view]\r\n                )\r\n            }\r\n        }\r\n\r\n        //this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                { this.state.renderView && this.renderView() }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComponentView","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n\r\nimport TabsUI from '@ui/Tabs'\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\n\r\nimport Swiper from 'swiper'\r\n\r\nconst tabs_default_js = `\r\nconst tabs = new Tabs('[am-tabs=\"default\"]', {\r\n    active: false,\r\n    init: true\r\n})\r\n`;\r\n\r\nconst tabs_default_markup = `\r\n<div am-tabs=\"default\">\r\n    <div am-tab-list=\"\">\r\n        <div am-tab=\"1\" data-tab=\"1\">tab 1</div>\r\n        <div am-tab=\"2\" data-tab=\"2\">tab 2</div>\r\n        <div am-tab=\"3\" data-tab=\"3\">tab 3</div>\r\n    </div>\r\n    <div am-tab-wrapper=\"\">\r\n        <div am-tab-content=\"1\" data-content=\"1\">content 1</div>\r\n        <div am-tab-content=\"2\" data-content=\"2\">content 2</div>\r\n        <div am-tab-content=\"3\" data-content=\"3\">content 3</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst tabs_swiper_js = `\r\nconst tabs = new Tabs('[am-tabs=\"swiper\"]', {\r\n    init: true\r\n})\r\n\r\nconst tabsSlider = new Swiper('[am-tabs=\"swiper\"]', {\r\n    loop: false,\r\n    slidesPerView: 'auto',\r\n    spaceBetween: 10,\r\n});\r\n`;\r\n\r\nconst tabs_swiper_markup = `\r\n<div am-tabs=\"swiper\">\r\n    <div class=\"swiper-container\">\r\n        <div class=\"swiper-wrapper\">\r\n            <div am-tab-list>            \r\n                <div class=\"swiper-slide\">\r\n                    <div am-tab=\"1\" data-tab=\"1\">tab 1</div>\r\n                </div>\r\n                <div class=\"swiper-slide\">\r\n                    <div am-tab=\"2\" data-tab=\"2\">tab 2</div>\r\n                </div>\r\n                <div class=\"swiper-slide\">\r\n                    <div am-tab=\"3\" data-tab=\"3\">tab 3</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div am-tab-wrapper=\"\">\r\n        <div am-tab-content=\"1\" data-content=\"1\">content 1</div>\r\n        <div am-tab-content=\"2\" data-content=\"2\">content 2</div>\r\n        <div am-tab-content=\"3\" data-content=\"3\">content 3</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst tabs_events_js = `\r\nconst tabs = new Tabs('[am-tabs=\"events\"]')\r\n\r\ntabs.on('init', (data) => {\r\n    console.log(data);\r\n})\r\n\r\ntabs.on('change', (tab, content) => {\r\n    console.log(tab, content);\r\n})\r\n\r\ntabs.init()\r\n`;\r\n\r\nconst tabs_events_markup = `\r\n<div am-tabs=\"events\">\r\n    <div am-tab-list=\"\">\r\n        <div am-tab=\"1\" data-tab=\"1\">tab 1</div>\r\n        <div am-tab=\"2\" data-tab=\"2\">tab 2</div>\r\n        <div am-tab=\"3\" data-tab=\"3\">tab 3</div>\r\n    </div>\r\n    <div am-tab-wrapper=\"\">\r\n        <div am-tab-content=\"1\" data-content=\"1\">content 1</div>\r\n        <div am-tab-content=\"2\" data-content=\"2\">content 2</div>\r\n        <div am-tab-content=\"3\" data-content=\"3\">content 3</div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nexport class NumberFormat extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            tabs_default_js,\r\n            tabs_default_markup,\r\n            tabs_swiper_js,\r\n            tabs_swiper_markup,\r\n            tabs_events_js,\r\n            tabs_events_markup,\r\n        }\r\n\r\n        this.tabsDefaultMarkup = React.createRef()\r\n        this.tabsSwiperMarkup = React.createRef()\r\n        this.tabsEventsMarkup = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tabsDefaultMarkup.current.innerHTML = this.state.tabs_default_markup;\r\n        this.tabsSwiperMarkup.current.innerHTML = this.state.tabs_swiper_markup;\r\n        this.tabsEventsMarkup.current.innerHTML = this.state.tabs_events_markup;\r\n\r\n        // this.number_format.current.innerHTML = eval(number_format)\r\n        \r\n        this.tabsBuild()\r\n    }\r\n\r\n    tabsBuild() {\r\n        const tabs = new TabsUI(this.tabsDefaultMarkup.current.querySelector('[am-tabs=\"default\"]'), {\r\n            active: true,\r\n            init: true\r\n        })\r\n\r\n        const tabs1 = new TabsUI(this.tabsSwiperMarkup.current.querySelector('[am-tabs=\"swiper\"]'), {\r\n            init: true\r\n        })\r\n        \r\n        const tabsSlider = new Swiper(this.tabsSwiperMarkup.current.querySelector('.swiper-container'), {\r\n            loop: false,\r\n            slidesPerView: 'auto',\r\n            spaceBetween: 10,\r\n        });\r\n\r\n        const tabs2 = new TabsUI(this.tabsEventsMarkup.current.querySelector('[am-tabs=\"events\"]'))\r\n        \r\n        tabs2.on('init', (data) => {\r\n            console.log(data);\r\n        })\r\n        \r\n        tabs2.on('change', (tab, content) => {\r\n            console.log(tab, content);\r\n        })\r\n\r\n        tabs2.init()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Tabs' }\r\n                    headerText={ 'Компонент аккордеона.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import Tabs from '@ui/Tabs'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js (scss):</span> <CopyText language=\"js\" copyText=\"import '@ui/scss/am-Tabs.scss'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/pobeda-ui/src/ui/scss/am-Tabs.scss';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"properties\" className=\"tabs__link\" tag=\"link\">Свойства и методы</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Обычный</h2>\r\n                                    <div className=\"example__preview\" ref={this.tabsDefaultMarkup}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_default_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_default_js => { this.setState({ tabs_default_js }) }}\r\n                                            highlight={tabs_default_js => highlight(tabs_default_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_default_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_default_markup => { this.setState({ tabs_default_markup }) }}\r\n                                            highlight={tabs_default_markup => highlight(tabs_default_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Events</h2>\r\n                                    <div className=\"example__preview\" ref={this.tabsEventsMarkup}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_events_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_events_js => { this.setState({ tabs_events_js }) }}\r\n                                            highlight={tabs_events_js => highlight(tabs_events_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_events_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_events_markup => { this.setState({ tabs_events_markup }) }}\r\n                                            highlight={tabs_events_markup => highlight(tabs_events_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Слайдер</h2>\r\n                                    <div className=\"example__preview\" ref={this.tabsSwiperMarkup}></div>\r\n                                    <p className=\"example__about\">Используется библиотека swiper: <a target=\"blank\" style={{color: '#1990b8'}} href=\"https://www.npmjs.com/package/swiper\">https://www.npmjs.com/package/swiper</a></p>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_swiper_js}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_swiper_js => { this.setState({ tabs_swiper_js }) }}\r\n                                            highlight={tabs_swiper_js => highlight(tabs_swiper_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs_swiper_markup}\r\n                                            readOnly={true}\r\n                                            onValueChange={tabs_swiper_markup => { this.setState({ tabs_swiper_markup }) }}\r\n                                            highlight={tabs_swiper_markup => highlight(tabs_swiper_markup, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"properties\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-table-responsive={''}>\r\n                                    <table am-table={''} border-bottom={''}>\r\n                                        <caption>\r\n                                           Свойства\r\n                                        </caption>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Название</th>\r\n                                                <th>Значение по умолчанию</th>\r\n                                                <th>Тип</th>\r\n                                                <th>Описание</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    element\r\n                                                </td>\r\n                                                <td>[am-tabs]</td>\r\n                                                <td>string || Element</td>\r\n                                                <td>HTML элемент табов</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    active\r\n                                                </td>\r\n                                                <td>true</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Если true, то будет активен первый аккордеон</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    init\r\n                                                </td>\r\n                                                <td>false</td>\r\n                                                <td>boolean</td>\r\n                                                <td>Если false, то аккордеон не будет проинициилизирован</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    on\r\n                                                </td>\r\n                                                <td>\r\n                                                    init (data) => {\"{ }\"}<br/>\r\n                                                    change (tab, panel) => {\"{ }\"}\r\n                                                </td>\r\n                                                <td>event</td>\r\n                                                <td>Методы жизненного цикла</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\n\r\nimport { NumberFormat } from './NumberFormat/NumberFormat.jsx'\r\n\r\nclass MarkupView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            views: {\r\n                numberformat: <NumberFormat/>,\r\n            },\r\n            renderView: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const view = this.state.views[this.props.match.params.name]\r\n\r\n        if (!view) {\r\n            this.props.history.push('/')\r\n        } else {\r\n            this.setState({\r\n                renderView: true\r\n            })\r\n        }\r\n    }\r\n\r\n    renderView = () => {\r\n        const name = this.props.match.params.name\r\n        const views = {...this.state.views}\r\n\r\n        for(let view in views) {\r\n            if (name === view) {\r\n                return (\r\n                    views[view]\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                { this.state.renderView && this.renderView() }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MarkupView","import React, { Component, Fragment }               from 'react'\r\nimport Editor                                       from 'react-simple-code-editor';\r\nimport { highlight, languages }                     from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content                                      from '../../../containers/Content.jsx'\r\nimport Header                                       from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider }     from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText                                     from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext }                            from '../../../containers/Layout.jsx';\r\n\r\nconst tabs = `\r\nconst tabsSwiper = new Swiper(document.querySelector('.swiper-container'), {\r\n    spaceBetween: 10,\r\n    loop: false,\r\n    slidesPerView: 'auto',\r\n})\r\n`;\r\n\r\nconst tabsHtml = `\r\n<div class=\"swiper-container\">\r\n    <div am-tab-list class=\"swiper-wrapper\">\r\n        <div am-tab=\"novelty\" data-tab=\"novelty\" class=\"swiper-slide\">\r\n            novelty.title\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst cards = `\r\nconst noveltiesSwiper = new Swiper(document.querySelector('.swiper-container'), {\r\n    // wrapperClass: 'swiper-wrapper',\r\n    // slideClass: 'swiper-slide',\r\n    direction: 'horizontal',\r\n    loop: false,\r\n    spaceBetween: 10,\r\n    init: false,\r\n    observer: true,\r\n    speed: 1000,\r\n    autoplay: {\r\n        delay: 3000,\r\n    },\r\n    updateOnWindowResize: true,\r\n    observeSlideChildren: true,\r\n    navigation: {\r\n        nextEl: item.parentNode.querySelector('.swiper-button-next'),\r\n        prevEl: item.parentNode.querySelector('.swiper-button-prev')\r\n    },\r\n    on: {\r\n        init: function() {\r\n            console.log('init');\r\n        },\r\n    },\r\n    breakpoints: {\r\n        1: {\r\n            slidesPerView: 'auto',\r\n            spaceBetween: 10,\r\n            slidesOffsetBefore: 0,\r\n            slidesOffsetAfter: 0,\r\n        },\r\n        550: {\r\n            slidesPerView: 3,\r\n            spaceBetween: 10,\r\n            slidesOffsetBefore: 0,\r\n            slidesOffsetAfter: 0,\r\n        },\r\n        767: {\r\n            slidesPerView: 4,\r\n            spaceBetween: 10,\r\n            slidesOffsetBefore: 0,\r\n            slidesOffsetAfter: 0,\r\n        },\r\n        1170: {\r\n            slidesPerView: 5,\r\n            spaceBetween: 10,\r\n            slidesOffsetBefore: 0,\r\n            slidesOffsetAfter: 0,\r\n        },\r\n    }\r\n});\r\n\r\nnoveltiesSwiper.init();\r\n\r\nwindow.addEventListener('resize', () => {\r\n    noveltiesSwiper.update();\r\n})\r\n`;\r\n\r\n\r\nexport default class SwiperPage extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {\r\n            tabs,\r\n            cards\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Swiper' }\r\n                    headerText={ 'карусель.' }\r\n                >\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                        <CopyText language=\"js\" copyText=\"import Swiper from 'swiper'\" />\r\n                        <CopyText language=\"scss\" copyText=\"@import 'node_modules/swiper/swiper.scss';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <p className=\"example__about\">Официальная <a target=\"_blank\"  rel=\"noreferrer\" href=\"https://swiperjs.com/\">документация</a></p>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                        value={'npm i swiper'}\r\n                                        readOnly={true}\r\n                                        highlight={tabsHtml => highlight(tabsHtml, languages.javascript)}\r\n                                        padding={0}\r\n                                    />\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Для табов</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={tabsHtml}\r\n                                            readOnly={true}\r\n                                            highlight={tabsHtml => highlight(tabsHtml, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.tabs}\r\n                                            readOnly={true}\r\n                                            highlight={tabs => highlight(tabs, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Для карточек товара</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.cards}\r\n                                            readOnly={true}\r\n                                            highlight={cards => highlight(cards, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment }               from 'react'\r\nimport Editor                                       from 'react-simple-code-editor';\r\nimport { highlight, languages }                     from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content                                      from '../../../containers/Content.jsx'\r\nimport Header                                       from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider }     from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText                                     from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext }                            from '../../../containers/Layout.jsx';\r\n\r\nconst SimpleBar = `\r\nnew SimpleBar(document.querySelector('div'), {\r\n    autoHide: false,\r\n})\r\n`;\r\n\r\nconst SimpleBarHtml = `\r\n<div data-simplebar>\r\n    ...\r\n</div>\r\n`;\r\n\r\n\r\nexport default class SimpleBarPage extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {\r\n            SimpleBar\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Simplebar' }\r\n                    headerText={ 'Скролл бар.' }\r\n                >\r\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                        <CopyText language=\"js\" copyText=\"import SimpleBar from 'simplebar'\" />\r\n                        <CopyText language=\"scss\" copyText=\"@import 'node_modules/simplebar/dist/simplebar.css';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <p className=\"example__about\">Официальная <a target=\"_blank\"  rel=\"noreferrer\" href=\"https://grsmto.github.io/simplebar/\">документация</a></p>\r\n                                <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={'npm i simplebar'}\r\n                                            readOnly={true}\r\n                                            highlight={tabsHtml => highlight(tabsHtml, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">аттрибут</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={SimpleBarHtml}\r\n                                            readOnly={true}\r\n                                            highlight={SimpleBarHtml => highlight(SimpleBarHtml, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <h2 className=\"example__header\">конструктор</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.SimpleBar}\r\n                                            readOnly={true}\r\n                                            highlight={SimpleBar => highlight(SimpleBar, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment }               from 'react'\r\nimport Editor                                       from 'react-simple-code-editor';\r\nimport { highlight, languages }                     from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content                                      from '../../../containers/Content.jsx'\r\nimport Header                                       from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider }     from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText                                     from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext }                            from '../../../containers/Layout.jsx';\r\n\r\nimport noUiSlider                                   from 'nouislider'\r\nimport '../../../../node_modules/nouislider/distribute/nouislider.css';\r\n\r\nwindow.noUiSlider = noUiSlider;\r\n\r\nconst nouislider_js = `\r\nnoUiSlider.create(document.querySelector('[am-slider=\"sandbox\"]'), {\r\n    connect: true,\r\n    behaviour: 'tap',\r\n    start: [100, 900],\r\n    connect: [false, true, false],\r\n    step: 1,\r\n    range: {\r\n        'min': [0],\r\n        'max': [1000]\r\n    }\r\n});\r\n`;\r\n\r\nconst nouislider_html = `\r\n<div am-slider=\"sandbox\"></div>\r\n`;\r\n\r\nconst nouislider1_js = `\r\nnoUiSlider.create(document.querySelector('[am-slider=\"sandbox_1\"]'), {\r\n    connect: true,\r\n    behaviour: 'tap',\r\n    start: [100],\r\n    connect: [true, false],\r\n    step: 1,\r\n    range: {\r\n        'min': [0],\r\n        'max': [1000]\r\n    }\r\n});\r\n`;\r\n\r\nconst nouislider2_js = `\r\nnoUiSlider.create(this.twoRef.current, {\r\n    connect: true,\r\n    behaviour: 'tap',\r\n    start: [100, 900],\r\n    connect: [false, true, false],\r\n    step: 1,\r\n    range: {\r\n        'min': [0],\r\n        'max': [1000]\r\n    }\r\n});\r\n`;\r\n\r\nconst nouislider_input = `\r\nconst inputMin = document.querySelector('[am-input-range=\"min\"] input')\r\nconst inputMax = document.querySelector('[am-input-range=\"max\"] input')\r\n\r\nconst divForSlider = document.querySelector('[am-slider=\"input\"]')\r\n\r\nnoUiSlider.create(divForSlider, {\r\n    connect: true,\r\n    behaviour: 'tap',\r\n    start: [1000, 9000],\r\n    connect: [false, true, false],\r\n    step: 1,\r\n    range: {\r\n        'min': [0],\r\n        'max': [10000]\r\n    }\r\n});\r\n\r\ndivForSlider.noUiSlider.on('update', function (values, handle) {\r\n    let value = String(Math.round(values[handle]));\r\n    // value = value.replace(/\\s/g, '');\r\n    // value = value.replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ');\r\n\r\n    if (handle == 1) {\r\n        inputMax.value = value;\r\n    } else if (handle == 0) {\r\n        inputMin.value = value;\r\n    }\r\n});\r\n\r\ndivForSlider.noUiSlider.on('change', function (values, handle) {\r\n    let value = String(Math.round(values[handle]));\r\n    // value = value.replace(/\\s/g, '');\r\n    // value = value.replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ');\r\n});\r\n\r\ninputMin.addEventListener('change', function () {\r\n    divForSlider.noUiSlider.set([this.value.replace(/\\s/g, ''), null]);\r\n});\r\n\r\ninputMax.addEventListener('change', function () {\r\n    divForSlider.noUiSlider.set([null, this.value.replace(/\\s/g, '')]);\r\n});\r\n`;\r\n\r\nclass Nouislider extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            nouislider_js,\r\n            nouislider_html,\r\n\r\n            write: false,\r\n            evalTimeout: false,\r\n        }\r\n\r\n\r\n        this.nouisliderRef = React.createRef()\r\n        this.oneRef = React.createRef()\r\n        this.twoRef = React.createRef()\r\n        this.inputRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nouisliderRef.current.innerHTML = this.state.nouislider_html\r\n\r\n        this.context.initEval.bind(this)([\r\n            this.state.nouislider_js\r\n        ])\r\n\r\n        this.createSlider()\r\n    }\r\n\r\n    createSlider = () => {\r\n        noUiSlider.create(this.oneRef.current, {\r\n            connect: true,\r\n            behaviour: 'tap',\r\n            start: [100],\r\n            connect: [true, false],\r\n            step: 1,\r\n            range: {\r\n                'min': [0],\r\n                'max': [1000]\r\n            }\r\n        });\r\n\r\n        noUiSlider.create(this.twoRef.current, {\r\n            connect: true,\r\n            behaviour: 'tap',\r\n            start: [100, 900],\r\n            connect: [false, true, false],\r\n            step: 1,\r\n            range: {\r\n                'min': [0],\r\n                'max': [1000]\r\n            }\r\n        });\r\n\r\n        // noUiSlider.create(this.inputRef.current, {\r\n        //     connect: true,\r\n        //     behaviour: 'tap',\r\n        //     start: [100, 900],\r\n        //     connect: [false, true, false],\r\n        //     step: 1,\r\n        //     range: {\r\n        //         'min': [0],\r\n        //         'max': [1000]\r\n        //     }\r\n        // });\r\n\r\n        this.context.initEval.bind(this)([\r\n            nouislider_input\r\n        ])\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Nouislider' }\r\n                    headerText={ 'Ползунок.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import noUiSlider from 'nouislider'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/nouislider/distribute/nouislider.css';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"grid\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <li><TabLink to=\"sandbox\" className=\"tabs__link\" tag=\"link\">Песочница</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <p className=\"example__about\">Официальная <a target=\"_blank\"  rel=\"noreferrer\" href=\"https://refreshless.com/nouislider/\">документация</a></p>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">1 тач</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <div ref={this.oneRef}></div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={nouislider1_js}\r\n                                            readOnly={true}\r\n                                            highlight={nouislider1_js => highlight(nouislider1_js, languages.js)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">2 тачa</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <div ref={this.twoRef}></div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={nouislider2_js}\r\n                                            readOnly={true}\r\n                                            highlight={nouislider2_js => highlight(nouislider2_js, languages.js)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">С полями</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <div am-inputs-range={''}>\r\n                                            <div am-input-range=\"min\">\r\n                                                <label>Цена, мин&nbsp;</label>\r\n                                                <input type=\"text\"/>\r\n                                            </div>\r\n                                            <div am-dots=\"\"><i></i><i></i><i></i></div>\r\n                                            <div am-input-range=\"max\">\r\n                                                <label>Цена, макс&nbsp;</label>\r\n                                                <input type=\"text\"/>\r\n                                            </div>\r\n                                        </div><br/>\r\n                                        <div ref={this.inputRef} am-slider=\"input\"></div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={nouislider_input}\r\n                                            readOnly={true}\r\n                                            highlight={nouislider_input => highlight(nouislider_input, languages.js)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                            <TabContent for=\"sandbox\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Песочница</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.nouislider_html}\r\n                                            readOnly={false}\r\n                                            onValueChange={nouislider_html => {\r\n                                                this.context.evalEditorHtml.bind(this)({nouislider_html}, this.nouisliderRef, {nouislider_js: this.state.nouislider_js})\r\n                                            }}\r\n                                            highlight={nouislider_html => highlight(nouislider_html, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.nouislider_js}\r\n                                            readOnly={false}\r\n                                            onValueChange={nouislider_js => {\r\n                                                this.context.evalEditorJS.bind(this)({nouislider_js}, this.nouisliderRef,  {nouislider_html: this.state.nouislider_html})\r\n                                            }}\r\n                                            highlight={nouislider_js => highlight(nouislider_js, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__preview\" ref={this.nouisliderRef}></div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nouislider","import React, { Component, Fragment }               from 'react'\r\nimport Editor                                       from 'react-simple-code-editor';\r\nimport { highlight, languages }                     from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content                                      from '../../../containers/Content.jsx'\r\nimport Header                                       from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider }     from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText                                     from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext }                            from '../../../containers/Layout.jsx';\r\n\r\nconst js = `\r\nconst images = document.querySelectorAll('[am-image]');\r\n\r\nimages.forEach((item, index) => {\r\n    item.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        const gallery = openPhotoSwipe(document.querySelectorAll('.swiper-slide [am-image]'), index);\r\n\r\n        gallery.init();\r\n    })\r\n})\r\n`;\r\n\r\nconst jspswp = `\r\nconst openPhotoSwipe = (images, imageIndex) => {\r\n    const pswpElement = document.querySelectorAll('.pswp')[0];\r\n\r\n    let imageArray = [];\r\n\r\n    images.forEach((item) => {\r\n        imageArray.push(item.getAttribute('src'));\r\n    })\r\n\r\n    const items = imageArray.map((item) => {\r\n        const obj = {\r\n            src: item,\r\n            w: 1200,\r\n            h: 800,\r\n        }\r\n\r\n        return obj;\r\n    });\r\n\r\n    const options = {\r\n        index: imageIndex,\r\n        zoomEl: true,\r\n        getDoubleTapZoom: function (isMouseClick, item) {\r\n            if (isMouseClick) {\r\n                return 2;\r\n            } else {\r\n                return item.initialZoomLevel < 0.5 ? 1 : 1.5;\r\n            }\r\n        },\r\n        getThumbBoundsFn: () => {\r\n            const thumbs = document.querySelectorAll('[am-thumb-item]');\r\n            let thumbArray = [];\r\n            thumbs.forEach(item => {\r\n                thumbArray.push(item);\r\n            });\r\n            const thumbnail = thumbArray[imageIndex];\r\n            let pageYScroll = window.pageYOffset || document.documentElement.scrollTop;\r\n            const rect = thumbnail.getBoundingClientRect();\r\n            return {x: rect.left, y: rect.top + pageYScroll, w: rect.width};\r\n        },\r\n        closeElClasses: ['item', 'caption', 'zoom-wrap', 'ui', 'top-bar']\r\n    }\r\n\r\n    const pswp = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\r\n\r\n    return pswp;\r\n}\r\n`;\r\n\r\nconst pswp = `\r\n<div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"pswp__bg\"></div>\r\n    <div class=\"pswp__scroll-wrap\">\r\n        <div class=\"pswp__container\">\r\n            <div class=\"pswp__item\"></div>\r\n            <div class=\"pswp__item\"></div>\r\n            <div class=\"pswp__item\"></div>\r\n        </div>\r\n        <div class=\"pswp__ui\">\r\n            <div class=\"pswp__top-bar\">\r\n                <div class=\"pswp__counter\"></div>\r\n                <button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"></button>\r\n                <button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"></button>\r\n                <button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"></button>\r\n                <div class=\"pswp__preloader\">\r\n                    <div class=\"pswp__preloader__icn\">\r\n                        <div class=\"pswp__preloader__cut\">\r\n                            <div class=\"pswp__preloader__donut\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\r\n                <div class=\"pswp__share-tooltip\"></div>\r\n            </div>\r\n            <button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\">\r\n            </button>\r\n            <button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\">\r\n            </button>\r\n            <div class=\"pswp__caption\">\r\n                <div class=\"pswp__caption__center\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nconst html = `\r\n<div class=\"swiper-container\">\r\n    <div class=\"swiper-wrapper\">\r\n        <div class=\"swiper-slide\">\r\n            <img src=\"/modules/image/src/images/cache/product_photo_1_2002000500649_8-705-440.webp\" am-image>\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n\r\nclass Photoswipe extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Photoswipe' }\r\n                    headerText={ 'Фотогаллерея.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import PhotoSwipe from 'photoswipe';\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>js:</span> <CopyText language=\"js\" copyText=\"import PhotoSwipeUI_Default from 'photoswipe/dist/photoswipe-ui-default'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <span style={{marginTop: '9px', marginRight: '10px'}}>scss:</span> <CopyText language=\"scss\" copyText=\"@import 'node_modules/photoswipe/src/css/main.scss';\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"grid\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <p className=\"example__about\">Официальная <a target=\"_blank\"  rel=\"noreferrer\" href=\"https://photoswipe.com/\">документация</a></p>\r\n                                <div className=\"example__code\">\r\n                                    <Editor\r\n                                        value={'npm i photoswipe'}\r\n                                        readOnly={true}\r\n                                        highlight={tabsHtml => highlight(tabsHtml, languages.javascript)}\r\n                                        padding={0}\r\n                                    />\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">контейнер с pswp разметкой</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={pswp}\r\n                                            readOnly={true}\r\n                                            highlight={pswp => highlight(pswp, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">html контейнер c фото</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={html}\r\n                                            readOnly={true}\r\n                                            highlight={html => highlight(html, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">обьявление pswp</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={js}\r\n                                            readOnly={true}\r\n                                            highlight={js => highlight(js, languages.js)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">параметры pswp</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={jspswp}\r\n                                            readOnly={true}\r\n                                            highlight={jspswp => highlight(jspswp, languages.js)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Photoswipe","import React, { Component, Fragment } from 'react'\r\n\r\nimport SwiperPage from './Swiper'\r\nimport SimpleBarPage from './Simplebar'\r\nimport Nouislider from './Nouislider/Nouislider.jsx'\r\nimport Photoswipe from './Photoswipe/Photoswipe.jsx'\r\n\r\nclass PluginsView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            views: {\r\n                swiper: <SwiperPage/>,\r\n                simplebar: <SimpleBarPage/>,\r\n                nouislider: <Nouislider/>,\r\n                photoswipe: <Photoswipe/>,\r\n            },\r\n            renderView: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const view = this.state.views[this.props.match.params.name]\r\n\r\n        if (!view) {\r\n            this.props.history.push('/')\r\n        } else {\r\n            this.setState({\r\n                renderView: true\r\n            })\r\n        }\r\n    }\r\n\r\n    renderView = () => {\r\n        const name = this.props.match.params.name\r\n        const views = {...this.state.views}\r\n\r\n        for(let view in views) {\r\n            if (name === view) {\r\n                return (\r\n                    views[view]\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                { this.state.renderView && this.renderView() }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PluginsView","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext } from '../../../containers/Layout.jsx';\r\n\r\nconst create = `\r\nconst customElement = Utils.element.create('div', {'am-text': ''}, [], 'customElementCreate');\r\n\r\nthis.createRef.current.appendChild(customElement);\r\n`;\r\n\r\nconst template = `\r\nconst customElement = Utils.element.createTemplate(\"<div am-text>customElementTemplate</div>\");\r\n\r\nthis.templateRef.current.appendChild(customElement);\r\n`;\r\n\r\nconst coord = `\r\nthis.coordRef.current.innerHTML = \"<pre>\" + JSON.stringify(Utils.element.coord(document.querySelector('body')), null, 2) + \"</pre>\"`;\r\n;\r\n\r\n\r\n\r\nexport default class Element extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {\r\n            create,\r\n            template,\r\n            coord,\r\n\r\n            write: false,\r\n            evalTimeout: false,\r\n        }\r\n\r\n        this.createRef = React.createRef()\r\n        this.templateRef = React.createRef()\r\n        this.coordRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.initEval.bind(this)([\r\n            this.state.create,\r\n            this.state.template,\r\n            this.state.coord\r\n        ])\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'element' }\r\n                    // headerText={ 'утилита для работы с элементами.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import Utils from '@utils'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import element from '@utils/element'\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">create</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={`element.create(tag, attributes, children, text, ns = false)`}\r\n                                            readOnly={true}\r\n                                            highlight={create => highlight(create, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__preview\" ref={this.createRef}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.create}\r\n                                            readOnly={false}\r\n                                            onValueChange={create => {\r\n                                                this.context.evalEditorJS.bind(this)({create}, this.createRef)\r\n                                            }}\r\n                                            highlight={create => highlight(create, languages.javascript)}\r\n                                            padding={0}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">template</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={`element.createTemplate(content)`}\r\n                                            readOnly={true}\r\n                                            highlight={template => highlight(template, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__preview\" ref={this.templateRef}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.template}\r\n                                            readOnly={false}\r\n                                            onValueChange={template => this.context.evalEditorJS.bind(this)({template}, this.templateRef)}\r\n                                            highlight={template => highlight(template, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">coord</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={`element.coord(element)`}\r\n                                            readOnly={true}\r\n                                            highlight={coord => highlight(coord, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__preview\" ref={this.coordRef}></div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.coord}\r\n                                            readOnly={false}\r\n                                            onValueChange={coord => this.context.evalEditorJS.bind(this)({coord}, this.coordRef)}\r\n                                            highlight={coord => highlight(coord, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext } from '../../../containers/Layout.jsx';\r\n\r\nconst transitionEnd = `\r\nelement.addEventListener(event.transitionEnd, () => {\r\n    ...\r\n})\r\n`;\r\n\r\nconst animationEnd = `\r\nelement.addEventListener(event.animationEnd, () => {\r\n    ...\r\n})\r\n`;\r\n\r\n\r\nexport default class EventPage extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {\r\n            transitionEnd,\r\n            animationEnd\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'event' }\r\n                    // headerText={ 'утилита для работы с элементами.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import Utils from '@utils'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import event from '@utils/event'\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">transitionEnd</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.transitionEnd}\r\n                                            readOnly={true}\r\n                                            highlight={transitionEnd => highlight(transitionEnd, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">animationEnd</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.animationEnd}\r\n                                            readOnly={true}\r\n                                            highlight={animationEnd => highlight(animationEnd, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n\r\nimport SelectUI from '@ui/Select';\r\n\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext } from '../../../containers/Layout.jsx';\r\n\r\nconst getField = `\r\n/**\r\n * Возвращает обьект с данными поля формы\r\n * @param {HTMLElement} element\r\n * @returns {object} Возвращает данные поля {name, input, container, value}\r\n */\r\nutils.form.getField(element)\r\n`;\r\n\r\nconst getField_js = `\r\nconst inputContainer = document.querySelector('[am-input=\"name\"]')\r\n\r\nconst inputfield = Utils.form.getField(inputContainer)\r\n`;\r\n\r\nconst getFields = `\r\n/**\r\n * Возвращает массив с данными полей формы\r\n * @param {HTMLElement} form\r\n * @returns {object} Возвращает массив данных полей [...{name, input, container, value}]\r\n */\r\nutils.form.getFields(form)\r\n`;\r\n\r\nconst getFields_js = `\r\nconst form = document.querySelector('form')\r\n\r\nconst inputfields = utils.form.getFields(form)\r\n`;\r\n\r\nconst validate = `\r\n/**\r\n * Валидация поля формы\r\n * @param {object} element - обьект с данными поля {name, input, container, value}\r\n * @param {object} options - параметры валидации {empty, text, number, phone, email}\r\n * @param {object} result - обьект, с результатами валидации {name: true|false}     *\r\n * @returns {object} возвращает результат валидаци {name: true|false}\r\n */\r\nutils.form.validate(element, options = {}, result = {})\r\n`;\r\n\r\nconst validate_js = `\r\nconst inputContainer = document.querySelector('[am-input=\"name\"]')\r\nconst inputfield = Utils.form.getField(inputContainer)\r\n\r\nconst form = document.querySelector('form')\r\n\r\nconst validateOptions = {\r\n    empty: false\r\n}\r\n\r\nlet errors = {}\r\n\r\nutils.form.validate(inputfield, validateOptions(inputfield), errors)\r\n\r\nutils.form.getFields(form).forEach(element => utils.form.validate(element, validateOptions(element), errors))\r\n`;\r\n\r\n\r\nconst handlerChange = `\r\n/**\r\n * Обработчик полей формы, валидирует поля формы\r\n * @param {HTMLElement} element Элемент валидации\r\n * @param {object} options Параметры, на которые нужно проверять поле {empty, text, number, phone, email}\r\n */\r\nutils.form.handlerChange(element, options = {})\r\n`;\r\n\r\nconst handlerChange_js = `\r\nconst fields = window.Utils.form.getFields(form)\r\nconst button = form.querySelector('button')\r\n\r\nconst validateOptions = element => {\r\n    return {\r\n        empty: true,\r\n        text: element.name === 'name' ? true : false,\r\n        email: element.name === 'email' ? true : false,\r\n        phone: element.name === 'phone' ? true : false\r\n    }\r\n}\r\n\r\nlet errors = {}\r\n\r\nfields.forEach(element => window.Utils.form.handlerChange(element.container, validateOptions(element)))\r\n\r\nbutton.addEventListener('click', e => {\r\n    e.preventDefault()\r\n\r\n    window.Utils.form.getFields(form).forEach(element => window.Utils.form.validate(element, validateOptions(element), errors))\r\n    \r\n    if (window.Utils.form.checkError(errors)) {\r\n        console.log(errors);\r\n        return\r\n    } else {\r\n        window.Utils.form.getFields(form).forEach(element => {\r\n            window.Utils.form.clear(element.input)\r\n        })\r\n    }\r\n})\r\n`;\r\n\r\nconst form = `\r\n<form am-form=\"news\">\r\n    <div am-form-field width=\"100\">\r\n        <div am-input=\"fio\">\r\n            <div am-hint=\"top\">Фамилия</div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"fio\" type=\"text\" placeholder=\"Фамилия\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div am-input=\"name\">\r\n            <div am-hint=\"top\">Имя <span am-required=\"\">*</span></div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"name\" type=\"text\" placeholder=\"Имя\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div am-input=\"patronymic\">\r\n            <div am-hint=\"top\">Отчество</div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"patronymic\" type=\"text\" placeholder=\"Отчество\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-form-field width=\"auto\">\r\n        <div am-input=\"phone\">\r\n            <div am-hint=\"top\">Телефон <span am-required=\"\">*</span></div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"phone\" placeholder=\"+7 (900) 000-0000\" type=\"text\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div am-input=\"email\">\r\n            <div am-hint=\"top\">Email</div>\r\n            <div am-input-group>\r\n                <div am-check></div>\r\n                <input name=\"email\" type=\"text\" placeholder=\"\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-form-field width=\"auto\">\r\n        <div am-select am-input=\"city\">\r\n            <input am-select-input type=\"hidden\" name=\"city\" value=\"0\">\r\n            <div am-select-value=\"\">Ваш город</div>\r\n            <div am-select-wrapper>\r\n                <div am-select-options>\r\n                    <div am-select-option=\"0\">Все города</div>\r\n                    <div am-select-option=\"1\">Москва</div>\r\n                    <div am-select-option=\"2\">Самара</div>\r\n                    <div am-select-option=\"3\">Тольятти</div>\r\n                    <div am-select-option=\"4\">Казань</div>\r\n                    <div am-select-option=\"5\">Сызрань</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-form-field>\r\n        <div am-checkbox>\r\n            <input am-checkbox-input name=\"subscribe\" type=\"checkbox\">\r\n            <div am-checkbox-wrapper>\r\n                <div am-checkbox-icon></div>\r\n                <div am-checkbox-label>Подписать на новости</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div am-form-field>\r\n        <button am-button=\"main\">Подписаться</button>\r\n    </div>\r\n</form>\r\n`;\r\n\r\n\r\n\r\nexport default class Form extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {}\r\n\r\n        this.formRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.formRef.current.innerHTML = form\r\n\r\n        this.formValidate(this.formRef.current)\r\n\r\n        const customSelect = new SelectUI(this.formRef.current.querySelector('[am-select]'), {\r\n            name: 'selectCreate',\r\n            options: [\r\n                {value: 0, label: 'Все города'},\r\n                {value: 1, label: 'Москва'},\r\n                {value: 2, label: 'Самара'},\r\n                {value: 3, label: 'Тольятти'},\r\n                {value: 4, label: 'Казань'},\r\n                {value: 5, label: 'Сызрань'},\r\n            ],\r\n            placeholder: 'Выберите город',\r\n            placeholderOption: 'Список пуст'\r\n        });\r\n    } \r\n    \r\n    formValidate(form) {\r\n        const fields = window.Utils.form.getFields(form)\r\n        const button = form.querySelector('button')\r\n\r\n        const validateOptions = element => {\r\n            return {\r\n                empty: true,\r\n                text: element.name === 'name' ? true : false,\r\n                email: element.name === 'email' ? true : false,\r\n                phone: element.name === 'phone' ? true : false\r\n            }\r\n        }\r\n        \r\n        let errors = {}\r\n        \r\n        fields.forEach(element => window.Utils.form.handlerChange(element.container, validateOptions(element)))\r\n        \r\n        button.addEventListener('click', e => {\r\n            e.preventDefault()\r\n\r\n            window.Utils.form.getFields(form).forEach(element => window.Utils.form.validate(element, validateOptions(element), errors))\r\n            \r\n            if (window.Utils.form.checkError(errors)) {\r\n                console.log(errors);\r\n                return\r\n            } else {\r\n                window.Utils.form.getFields(form).forEach(element => {\r\n                    window.Utils.form.clear(element.input)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'form' }\r\n                    headerText={ 'утилита для работы с формами.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import Utils from '@utils'\" />\r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import form from '@utils/form'\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">getField</h2>\r\n                                    <p className=\"example__about\">Возвращает обьект для form.validate</p>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={getField}\r\n                                            readOnly={true}\r\n                                            highlight={getField => highlight(getField, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={getField_js}\r\n                                            readOnly={true}\r\n                                            highlight={getField => highlight(getField, languages.javascript)}\r\n                                            padding={0}                                            \r\n                                        />\r\n                                    </div>\r\n                                </div>    \r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">getFields</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={getFields}\r\n                                            readOnly={true}\r\n                                            highlight={getField => highlight(getField, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={getFields_js}\r\n                                            readOnly={true}\r\n                                            highlight={getField => highlight(getField, languages.javascript)}\r\n                                            padding={0}                                            \r\n                                        />\r\n                                    </div>\r\n                                </div>    \r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">validate</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={validate}\r\n                                            readOnly={true}\r\n                                            highlight={validate => highlight(validate, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={validate_js}\r\n                                            readOnly={true}\r\n                                            highlight={validate => highlight(validate, languages.javascript)}\r\n                                            padding={0}                                            \r\n                                        />\r\n                                    </div>\r\n                                </div>    \r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">handlerChange</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={handlerChange}\r\n                                            readOnly={true}\r\n                                            highlight={validate => highlight(validate, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={handlerChange_js}\r\n                                            readOnly={true}\r\n                                            highlight={validate => highlight(validate, languages.javascript)}\r\n                                            padding={0}                                            \r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"example__preview\" ref={this.formRef}></div>\r\n                                    {/* <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={form_field}\r\n                                            readOnly={true}\r\n                                            // onValueChange={form_field => { this.setState({ form_field }); this.form_field.current.innerHTML = form_field }}\r\n                                            highlight={form_field => highlight(form_field, languages.markup)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div> */}\r\n                                </div>                        \r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content from '../../../containers/Content.jsx'\r\nimport Header from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider } from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext } from '../../../containers/Layout.jsx';\r\n\r\nconst event = `\r\nclass Accordion extends EventEmitter {\r\n    constructor() {\r\n        super()\r\n\r\n        ...\r\n    }\r\n\r\n    ...\r\n}\r\n`;\r\n\r\nconst emit = `\r\nclass Accordion extends EventEmitter {\r\n    init() {\r\n        let data = ...\r\n        ...\r\n        this.emit('init', data)\r\n    }\r\n}\r\n`;\r\n\r\nconst on = `\r\nconst accordion = new Accordion('[am-accordion]', {\r\n    init: false\r\n})\r\n\r\naccordion.on('init', data => {\r\n    console.log(data);\r\n})\r\n\r\naccordion.init()\r\n`;\r\n\r\n\r\n\r\nexport default class EventEmitterPage extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {\r\n            event,\r\n            emit,\r\n            on\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'EventEmitter' }\r\n                    headerText={ 'утилита для работы с событиями.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import EventEmitter from '@utils/EventEmitter'\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Наследование</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.event}\r\n                                            readOnly={true}\r\n                                            highlight={event => highlight(event, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Вызов события</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.emit}\r\n                                            readOnly={true}\r\n                                            highlight={emit => highlight(emit, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Объявление события</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.on}\r\n                                            readOnly={true}\r\n                                            highlight={on => highlight(on, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment }               from 'react'\r\nimport Editor                                       from 'react-simple-code-editor';\r\nimport { highlight, languages }                     from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content                                      from '../../../containers/Content.jsx'\r\nimport Header                                       from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider }     from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText                                     from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext }                            from '../../../containers/Layout.jsx';\r\n\r\nimport mask                                         from '@utils/mask';\r\n\r\nconst string = `\r\nconst input = document.querySelector('input')\r\n\r\nmask.string(input)\r\n\r\n...\r\n\r\nconst value = mask.string(input).value\r\n`;\r\n\r\nconst number = `\r\nmask.number(input)\r\n`;\r\n\r\nconst float = `\r\nmask.float(input)\r\n`;\r\n\r\nconst phone = `\r\nmask.phone(input)\r\n`;\r\n\r\n\r\n\r\nexport default class Mask extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {\r\n            string,\r\n            number,\r\n            float,\r\n            phone\r\n        }\r\n\r\n        this.stringRef = React.createRef()\r\n        this.numberRef = React.createRef()\r\n        this.floatRef = React.createRef()\r\n        this.phoneRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        mask.string(this.stringRef.current.querySelector('input'))\r\n        mask.number(this.numberRef.current.querySelector('input'))\r\n        mask.float(this.floatRef.current.querySelector('input'))\r\n        mask.phone(this.phoneRef.current.querySelector('input'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Mask' }\r\n                    headerText={ 'утилита для работы с масками.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import mask from '@utils/mask'\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <div className=\"example__about\">Возвращают элемент</div>\r\n                                    <h2 className=\"example__header\">Маска для текста</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <div am-input=\"string\" ref={this.stringRef}>\r\n                                            <div am-hint=\"top\">Введите текст</div>\r\n                                            <input type=\"text\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.string}\r\n                                            readOnly={true}\r\n                                            highlight={string => highlight(string, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Маска для чисел</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <div am-input=\"number\" ref={this.numberRef}>\r\n                                            <div am-hint=\"top\">Введите число</div>\r\n                                            <input type=\"text\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.number}\r\n                                            readOnly={true}\r\n                                            highlight={number => highlight(number, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Маска для чисел с плавающей запятой</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <div am-input=\"float\" ref={this.floatRef}>\r\n                                            <div am-hint=\"top\">Введите цену</div>\r\n                                            <input type=\"text\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.float}\r\n                                            readOnly={true}\r\n                                            highlight={float => highlight(float, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Маска для телефона</h2>\r\n                                    <div className=\"example__preview\">\r\n                                        <div am-input=\"phone\" ref={this.phoneRef}>\r\n                                            <div am-hint=\"top\">Введите телефон</div>\r\n                                            <input type=\"text\" placeholder=\"+7 (___) ___-____\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.phone}\r\n                                            readOnly={true}\r\n                                            highlight={phone => highlight(phone, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment }               from 'react'\r\nimport Editor                                       from 'react-simple-code-editor';\r\nimport { highlight, languages }                     from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content                                      from '../../../containers/Content.jsx'\r\nimport Header                                       from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider }     from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText                                     from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext }                            from '../../../containers/Layout.jsx';\r\n\r\nconst is = `\r\n/**\r\n * @param {any} o\r\n */\r\nobject.is(o)\r\n`;\r\n\r\nconst extend = `\r\n/**\r\n * Object.assign\r\n * @param {any} target\r\n */\r\nobject.extend(target, ...args)\r\n`;\r\n\r\n\r\nexport default class ObjectPage extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {\r\n            is,\r\n            extend\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Object' }\r\n                    headerText={ 'утилита для работы с обьектами.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import object from '@utils/object'\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Проверка элемента на обьект</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.is}\r\n                                            readOnly={true}\r\n                                            highlight={is => highlight(is, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Копирование свойств обьекта</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.extend}\r\n                                            readOnly={true}\r\n                                            highlight={extend => highlight(extend, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment }               from 'react'\r\nimport Editor                                       from 'react-simple-code-editor';\r\nimport { highlight, languages }                     from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism-coy.css';\r\n\r\nimport Content                                      from '../../../containers/Content.jsx'\r\nimport Header                                       from '../../../components/Header/Header.jsx'\r\nimport { Tabs, TabContent, TabLink, TabSlider }     from '../../../components/ui/Tabs/'\r\n\r\nimport CopyText                                     from '../../../components/CopyText/CopyText.jsx';\r\nimport { LayoutContext }                            from '../../../containers/Layout.jsx';\r\n\r\nconst setAttributes = `\r\nElement.prototype.setAttributes\r\n\r\nelement.setAttributes({\r\n    attr1: attrValue1,\r\n    attr2: attrValue2,\r\n    attr3: attrValue3\r\n})\r\n`;\r\n\r\nconst removeAttributes = `\r\nElement.prototype.removeAttributes\r\n\r\nelement.removeAttributes({attr1, attr2})\r\n`;\r\n\r\nconst forEach = `\r\nNodeList.prototype.forEach\r\n\r\ndocument.querySelectorAll('div').forEach\r\n`;\r\n\r\n\r\n\r\nexport default class Prototype extends Component {\r\n    static contextType = LayoutContext;\r\n\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        this.state = {\r\n            setAttributes,\r\n            removeAttributes,\r\n            forEach\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header\r\n                    headerName={ 'Prototype' }\r\n                    headerText={ 'Набор полифиллов.' }\r\n                >\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <CopyText language=\"js\" copyText=\"import '@utils/prototype'\" />\r\n                    </div>\r\n                </Header>\r\n                <Content className=\"Tabs\">\r\n                    <div className=\"example\">\r\n                        <Tabs selectedTab=\"examples\" className=\"tabs\">\r\n                            <ul className=\"tabs__links\">\r\n                                <li><TabLink to=\"examples\" className=\"tabs__link\" tag=\"link\">Примеры и код</TabLink></li>\r\n                                <TabSlider tag=\"slider\"/>\r\n                            </ul>\r\n                            <TabContent for=\"examples\" className=\"tabs__content\" tag=\"content\">\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Установить несколько аттрибутов</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.setAttributes}\r\n                                            readOnly={true}\r\n                                            highlight={setAttributes => highlight(setAttributes, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">Удалить несколько аттрибутов</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.removeAttributes}\r\n                                            readOnly={true}\r\n                                            highlight={removeAttributes => highlight(removeAttributes, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div am-content=\"example\">\r\n                                    <h2 className=\"example__header\">forEach для NodeList</h2>\r\n                                    <div className=\"example__code\">\r\n                                        <Editor\r\n                                            value={this.state.forEach}\r\n                                            readOnly={true}\r\n                                            highlight={forEach => highlight(forEach, languages.javascript)}\r\n                                            padding={0}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabContent>\r\n                        </Tabs>\r\n                    </div>\r\n                </Content>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\n\r\nimport { Element, EventPage, Form, EventEmitterPage, Mask, ObjectPage, Prototype } from './routeUtils'\r\n\r\nclass UtilsView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            views: {\r\n                element: <Element/>,\r\n                event: <EventPage/>,\r\n                form: <Form/>,\r\n                EventEmitter: <EventEmitterPage/>,\r\n                mask: <Mask/>,\r\n                object: <ObjectPage/>,\r\n                prototype: <Prototype/>\r\n            },\r\n            renderView: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const view = this.state.views[this.props.match.params.name]\r\n\r\n        if (!view) {\r\n            this.props.history.push('/')\r\n        } else {\r\n            this.setState({\r\n                renderView: true\r\n            })\r\n        }\r\n    }\r\n\r\n    renderView = () => {\r\n        const name = this.props.match.params.name\r\n        const views = {...this.state.views}\r\n\r\n        for(let view in views) {\r\n            if (name === view) {\r\n                return (\r\n                    views[view]\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                { this.state.renderView && this.renderView() }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UtilsView","import React, { Component } from 'react'\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport Layout from './containers/Layout.jsx'\r\nimport Main from './pages/Main/Main.jsx'\r\nimport MarkupView from './pages/Markup/MarkupView.jsx'\r\nimport ComponentView from './pages/Components/ComponentView.jsx'\r\nimport MethodView from './pages/Methods/MethodView.jsx'\r\nimport PluginsView from './pages/Plugins/PluginsView.jsx'\r\nimport UtilsView from './pages/Utils/UtilsView.jsx'\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const apps = document.querySelector('.main')\r\n        let scroll = 0\r\n\r\n        // document.addEventListener('DOMContentLoaded', e => {\r\n        //     apps.style.setProperty('transform', 'translate3d(0px, 0px, 0px)')\r\n        //     apps.style.setProperty('transition', 'all 850ms cubic-bezier(0.615, 0.005, 0.255, 1) 0s')\r\n        // })\r\n\r\n        // window.addEventListener('mousewheel', e => {\r\n        //     console.log(e.deltaY);\r\n        //     if (e.deltaY === 100 ) {\r\n        //         scroll = scroll - window.innerHeight\r\n        //         apps.style.setProperty('transition', 'all 850ms cubic-bezier(0.615, 0.005, 0.255, 1) 0s')\r\n        //         apps.style.setProperty('transform', `translate3d(0px, ${scroll}px, 0px)`)\r\n        //     } else {\r\n        //         scroll = scroll + window.innerHeight\r\n        //         apps.style.setProperty('transform', `translate3d(0px, ${scroll}px, 0px)`)\r\n        //     }\r\n        // })\r\n\r\n        // window.addEventListener('resize', e => {\r\n        //     // console.log(e);\r\n        // })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Layout>\r\n                <Switch>\r\n                    <Route path={'/pobeda-ui'} exact component={Main}></Route>\r\n                    <Route path={'/pobeda-ui/markup/:name'} component={MarkupView}></Route>\r\n                    <Route path={'/pobeda-ui/components/:name'} component={ComponentView}></Route>\r\n                    <Route path={'/pobeda-ui/methods/:name'} component={MethodView}></Route>\r\n                    <Route path={'/pobeda-ui/plugins/:name'} component={PluginsView}></Route>\r\n                    <Route path={'/pobeda-ui/utils/:name'} component={UtilsView}></Route>\r\n                    <Redirect to={'/pobeda-ui'}></Redirect>\r\n                </Switch>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(App)","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport App from \"./App.jsx\"\r\nimport \"./scss/index.scss\"\r\nimport Utils from '@utils'\r\n\r\nwindow.Utils = Utils;\r\n\r\n\r\n\r\n\r\nconst app = (\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById(\"app\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Accordion.scss'\r\n\r\n\r\nclass Accordion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            active: false,\r\n            collapsing: false\r\n        }\r\n\r\n        this.title = React.createRef()\r\n        this.body = React.createRef()\r\n    }\r\n\r\n    onClickHandler(ref) {\r\n        this.setState({ collapsing: true, active: !this.state.active })\r\n\r\n        const body = ref.body.current\r\n        const collapsing = setTimeout(() => {\r\n            if (this.state.active && !this.state.collpasing) {\r\n                this.setState({ collapsing: false })\r\n                body.style.height = 'auto'\r\n                clearTimeout(collapsing)\r\n            }\r\n        }, 100);\r\n\r\n        if (this.state.active) {\r\n            body.style.height = body.scrollHeight + 'px'\r\n            setTimeout(() => {\r\n                body.removeAttribute('style')\r\n            }, 10);\r\n        } else {\r\n            body.style.height = body.scrollHeight + 'px'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classNameTitle = 'accordion-title ' + (this.props.classNameTitle && !this.props.nav ? this.props.classNameTitle : '')\r\n        const classNameBody = 'accordion-body ' + (this.props.classNameBody ? this.props.classNameBody : '')\r\n        const classNameAccordion = 'accordion ' + (this.state.active ? 'active' : '')\r\n\r\n        return (\r\n            <div className={classNameAccordion}>\r\n                <div\r\n                    onClick={this.onClickHandler.bind(this, {title: this.title, body: this.body})}\r\n                    className={classNameTitle}\r\n                    ref={this.title}\r\n                >\r\n                    {this.props.nav ?\r\n                        <NavLink to={'/frontend/utils/element'} className={'nav__link'} activeClassName={'active'} onClick={() => this.props.navHandler(true)}>\r\n                            {this.props.title}\r\n                        </NavLink> :\r\n                        this.props.title\r\n                    }\r\n\r\n                </div>\r\n                <div className={classNameBody} ref={this.body}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accordion"],"sourceRoot":""}